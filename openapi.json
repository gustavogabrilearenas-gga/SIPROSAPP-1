{
  "openapi": "3.0.2",
  "info": {
    "title": "SIPROSA MES API",
    "version": "",
    "description": "Documentación generada automáticamente"
  },
  "paths": {
    "/api/produccion/": {
      "get": {
        "operationId": "listLotes",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LoteList"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/{id}/": {
      "get": {
        "operationId": "retrieveLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/": {
      "get": {
        "operationId": "listLotes",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LoteList"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/en_proceso/": {
      "get": {
        "operationId": "enProcesoLote",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/resumen_hoy/": {
      "get": {
        "operationId": "resumenHoyLote",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/{id}/": {
      "get": {
        "operationId": "retrieveLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyLote",
        "description": "ViewSet para gestionar Lotes de Producción",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/{id}/logs_auditoria/": {
      "get": {
        "operationId": "logsAuditoriaLote",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes-etapas/": {
      "get": {
        "operationId": "listLoteEtapas",
        "description": "ViewSet para gestionar Etapas de Lotes",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LoteEtapa"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createLoteEtapa",
        "description": "ViewSet para gestionar Etapas de Lotes",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteEtapa"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes-etapas/{id}/": {
      "get": {
        "operationId": "retrieveLoteEtapa",
        "description": "ViewSet para gestionar Etapas de Lotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Lote.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteEtapa"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateLoteEtapa",
        "description": "ViewSet para gestionar Etapas de Lotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Lote.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteEtapa"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateLoteEtapa",
        "description": "ViewSet para gestionar Etapas de Lotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Lote.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteEtapa"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyLoteEtapa",
        "description": "ViewSet para gestionar Etapas de Lotes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Lote.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/paradas/": {
      "get": {
        "operationId": "listParadas",
        "description": "ViewSet para gestionar Paradas",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Parada"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createParada",
        "description": "ViewSet para gestionar Paradas",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parada"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/paradas/{id}/": {
      "get": {
        "operationId": "retrieveParada",
        "description": "ViewSet para gestionar Paradas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Parada.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parada"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateParada",
        "description": "ViewSet para gestionar Paradas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Parada.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parada"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateParada",
        "description": "ViewSet para gestionar Paradas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Parada.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parada"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyParada",
        "description": "ViewSet para gestionar Paradas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Parada.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/controles-calidad/": {
      "get": {
        "operationId": "listControlCalidads",
        "description": "ViewSet para gestionar Controles de Calidad",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ControlCalidad"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createControlCalidad",
        "description": "ViewSet para gestionar Controles de Calidad",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ControlCalidad"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ControlCalidad"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ControlCalidad"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ControlCalidad"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/controles-calidad/{id}/": {
      "get": {
        "operationId": "retrieveControlCalidad",
        "description": "ViewSet para gestionar Controles de Calidad",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Control de Calidad.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ControlCalidad"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateControlCalidad",
        "description": "ViewSet para gestionar Controles de Calidad",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Control de Calidad.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ControlCalidad"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ControlCalidad"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ControlCalidad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ControlCalidad"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateControlCalidad",
        "description": "ViewSet para gestionar Controles de Calidad",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Control de Calidad.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ControlCalidad"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ControlCalidad"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ControlCalidad"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ControlCalidad"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyControlCalidad",
        "description": "ViewSet para gestionar Controles de Calidad",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Control de Calidad.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/desviaciones/": {
      "get": {
        "operationId": "listDesviacions",
        "description": "ViewSet para gestionar Desviaciones",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Desviacion"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createDesviacion",
        "description": "ViewSet para gestionar Desviaciones",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Desviacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/desviaciones/abiertas/": {
      "get": {
        "operationId": "abiertasDesviacion",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Desviacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/desviaciones/{id}/": {
      "get": {
        "operationId": "retrieveDesviacion",
        "description": "ViewSet para gestionar Desviaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Desviación.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Desviacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateDesviacion",
        "description": "ViewSet para gestionar Desviaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Desviación.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Desviacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateDesviacion",
        "description": "ViewSet para gestionar Desviaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Desviación.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Desviacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyDesviacion",
        "description": "ViewSet para gestionar Desviaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Desviación.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/acciones-correctivas/": {
      "get": {
        "operationId": "listAccionCorrectivas",
        "description": "ViewSet para gestionar Acciones Correctivas (CAPA)",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccionCorrectiva"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createAccionCorrectiva",
        "description": "ViewSet para gestionar Acciones Correctivas (CAPA)",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccionCorrectiva"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AccionCorrectiva"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AccionCorrectiva"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccionCorrectiva"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/acciones-correctivas/pendientes/": {
      "get": {
        "operationId": "pendientesAccionCorrectiva",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccionCorrectiva"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/acciones-correctivas/{id}/": {
      "get": {
        "operationId": "retrieveAccionCorrectiva",
        "description": "ViewSet para gestionar Acciones Correctivas (CAPA)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Acción Correctiva.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccionCorrectiva"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateAccionCorrectiva",
        "description": "ViewSet para gestionar Acciones Correctivas (CAPA)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Acción Correctiva.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccionCorrectiva"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AccionCorrectiva"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AccionCorrectiva"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccionCorrectiva"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateAccionCorrectiva",
        "description": "ViewSet para gestionar Acciones Correctivas (CAPA)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Acción Correctiva.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccionCorrectiva"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AccionCorrectiva"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AccionCorrectiva"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccionCorrectiva"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyAccionCorrectiva",
        "description": "ViewSet para gestionar Acciones Correctivas (CAPA)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Acción Correctiva.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/documentos/": {
      "get": {
        "operationId": "listDocumentoVersionados",
        "description": "ViewSet para gestionar Documentos Versionados",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentoVersionado"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createDocumentoVersionado",
        "description": "ViewSet para gestionar Documentos Versionados",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentoVersionado"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/documentos/{id}/": {
      "get": {
        "operationId": "retrieveDocumentoVersionado",
        "description": "ViewSet para gestionar Documentos Versionados",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Documento Versionado.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentoVersionado"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateDocumentoVersionado",
        "description": "ViewSet para gestionar Documentos Versionados",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Documento Versionado.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentoVersionado"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateDocumentoVersionado",
        "description": "ViewSet para gestionar Documentos Versionados",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Documento Versionado.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentoVersionado"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyDocumentoVersionado",
        "description": "ViewSet para gestionar Documentos Versionados",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Documento Versionado.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/": {
      "get": {
        "operationId": "listInsumos",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Insumo"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Insumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/{id}/": {
      "get": {
        "operationId": "retrieveInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Insumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Insumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Insumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/insumos/": {
      "get": {
        "operationId": "listInsumos",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Insumo"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Insumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/insumos/{id}/": {
      "get": {
        "operationId": "retrieveInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Insumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Insumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Insumo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Insumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyInsumo",
        "description": "ViewSet para gestionar Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/lotes-insumo/": {
      "get": {
        "operationId": "listLoteInsumos",
        "description": "ViewSet para gestionar Lotes de Insumos",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LoteInsumo"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createLoteInsumo",
        "description": "ViewSet para gestionar Lotes de Insumos",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoteInsumo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoteInsumo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoteInsumo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteInsumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/lotes-insumo/{id}/": {
      "get": {
        "operationId": "retrieveLoteInsumo",
        "description": "ViewSet para gestionar Lotes de Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteInsumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateLoteInsumo",
        "description": "ViewSet para gestionar Lotes de Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoteInsumo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoteInsumo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoteInsumo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteInsumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateLoteInsumo",
        "description": "ViewSet para gestionar Lotes de Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoteInsumo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoteInsumo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoteInsumo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteInsumo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyLoteInsumo",
        "description": "ViewSet para gestionar Lotes de Insumos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Insumo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/repuestos/": {
      "get": {
        "operationId": "listRepuestos",
        "description": "ViewSet para gestionar Repuestos",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Repuesto"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createRepuesto",
        "description": "ViewSet para gestionar Repuestos",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Repuesto"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Repuesto"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Repuesto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repuesto"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/repuestos/{id}/": {
      "get": {
        "operationId": "retrieveRepuesto",
        "description": "ViewSet para gestionar Repuestos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Repuesto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repuesto"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateRepuesto",
        "description": "ViewSet para gestionar Repuestos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Repuesto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Repuesto"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Repuesto"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Repuesto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repuesto"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateRepuesto",
        "description": "ViewSet para gestionar Repuestos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Repuesto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Repuesto"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Repuesto"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Repuesto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repuesto"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyRepuesto",
        "description": "ViewSet para gestionar Repuestos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Repuesto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/productos-terminados/": {
      "get": {
        "operationId": "listProductoTerminados",
        "description": "ViewSet para gestionar Productos Terminados",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductoTerminado"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createProductoTerminado",
        "description": "ViewSet para gestionar Productos Terminados",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoTerminado"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProductoTerminado"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProductoTerminado"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoTerminado"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/productos-terminados/{id}/": {
      "get": {
        "operationId": "retrieveProductoTerminado",
        "description": "ViewSet para gestionar Productos Terminados",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Producto Terminado.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoTerminado"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateProductoTerminado",
        "description": "ViewSet para gestionar Productos Terminados",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Producto Terminado.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoTerminado"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProductoTerminado"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProductoTerminado"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoTerminado"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateProductoTerminado",
        "description": "ViewSet para gestionar Productos Terminados",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Producto Terminado.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoTerminado"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ProductoTerminado"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProductoTerminado"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoTerminado"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyProductoTerminado",
        "description": "ViewSet para gestionar Productos Terminados",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Producto Terminado.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/movimientos/": {
      "get": {
        "operationId": "listMovimientoInventarios",
        "description": "ViewSet para gestionar Movimientos de Inventario",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MovimientoInventario"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createMovimientoInventario",
        "description": "ViewSet para gestionar Movimientos de Inventario",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoInventario"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoInventario"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoInventario"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovimientoInventario"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/movimientos/resumen/": {
      "get": {
        "operationId": "resumenMovimientoInventario",
        "description": "Devuelve un resumen general de movimientos por tipo de ítem.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovimientoInventario"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/inventario/movimientos/{id}/": {
      "get": {
        "operationId": "retrieveMovimientoInventario",
        "description": "ViewSet para gestionar Movimientos de Inventario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Movimiento de Inventario.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovimientoInventario"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateMovimientoInventario",
        "description": "ViewSet para gestionar Movimientos de Inventario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Movimiento de Inventario.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoInventario"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoInventario"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoInventario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovimientoInventario"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateMovimientoInventario",
        "description": "ViewSet para gestionar Movimientos de Inventario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Movimiento de Inventario.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoInventario"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoInventario"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoInventario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovimientoInventario"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyMovimientoInventario",
        "description": "ViewSet para gestionar Movimientos de Inventario",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Movimiento de Inventario.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/": {
      "get": {
        "operationId": "listOrdenTrabajos",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrdenTrabajoList"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/{id}/": {
      "get": {
        "operationId": "retrieveOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/abiertas/": {
      "get": {
        "operationId": "abiertasOrdenTrabajo",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/ordenes-trabajo/": {
      "get": {
        "operationId": "listOrdenTrabajos",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrdenTrabajoList"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/ordenes-trabajo/abiertas/": {
      "get": {
        "operationId": "abiertasOrdenTrabajo",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/ordenes-trabajo/{id}/": {
      "get": {
        "operationId": "retrieveOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyOrdenTrabajo",
        "description": "ViewSet para gestionar Órdenes de Trabajo.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/tipos-mantenimiento/": {
      "get": {
        "operationId": "listTipoMantenimientos",
        "description": "ViewSet para gestionar Tipos de Mantenimiento.",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TipoMantenimiento"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createTipoMantenimiento",
        "description": "ViewSet para gestionar Tipos de Mantenimiento.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoMantenimiento"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TipoMantenimiento"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TipoMantenimiento"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoMantenimiento"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/tipos-mantenimiento/{id}/": {
      "get": {
        "operationId": "retrieveTipoMantenimiento",
        "description": "ViewSet para gestionar Tipos de Mantenimiento.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Tipo de Mantenimiento.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoMantenimiento"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateTipoMantenimiento",
        "description": "ViewSet para gestionar Tipos de Mantenimiento.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Tipo de Mantenimiento.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoMantenimiento"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TipoMantenimiento"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TipoMantenimiento"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoMantenimiento"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateTipoMantenimiento",
        "description": "ViewSet para gestionar Tipos de Mantenimiento.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Tipo de Mantenimiento.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoMantenimiento"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TipoMantenimiento"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TipoMantenimiento"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoMantenimiento"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyTipoMantenimiento",
        "description": "ViewSet para gestionar Tipos de Mantenimiento.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Tipo de Mantenimiento.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/incidencias/tipos-incidente/": {
      "get": {
        "operationId": "listTipoIncidentes",
        "description": "ViewSet para gestionar Tipos de Incidente",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TipoIncidente"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createTipoIncidente",
        "description": "ViewSet para gestionar Tipos de Incidente",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoIncidente"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TipoIncidente"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TipoIncidente"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIncidente"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/incidencias/tipos-incidente/{id}/": {
      "get": {
        "operationId": "retrieveTipoIncidente",
        "description": "ViewSet para gestionar Tipos de Incidente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Tipo de Incidente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIncidente"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateTipoIncidente",
        "description": "ViewSet para gestionar Tipos de Incidente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Tipo de Incidente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoIncidente"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TipoIncidente"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TipoIncidente"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIncidente"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateTipoIncidente",
        "description": "ViewSet para gestionar Tipos de Incidente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Tipo de Incidente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TipoIncidente"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TipoIncidente"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TipoIncidente"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TipoIncidente"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyTipoIncidente",
        "description": "ViewSet para gestionar Tipos de Incidente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Tipo de Incidente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/incidencias/incidentes/": {
      "get": {
        "operationId": "listIncidentes",
        "description": "ViewSet para gestionar Incidentes",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IncidenteList"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createIncidente",
        "description": "ViewSet para gestionar Incidentes",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Incidente"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Incidente"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Incidente"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incidente"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/incidencias/incidentes/abiertos/": {
      "get": {
        "operationId": "abiertosIncidente",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incidente"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/incidencias/incidentes/{id}/": {
      "get": {
        "operationId": "retrieveIncidente",
        "description": "ViewSet para gestionar Incidentes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Incidente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incidente"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateIncidente",
        "description": "ViewSet para gestionar Incidentes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Incidente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Incidente"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Incidente"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Incidente"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incidente"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateIncidente",
        "description": "ViewSet para gestionar Incidentes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Incidente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Incidente"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Incidente"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Incidente"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incidente"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyIncidente",
        "description": "ViewSet para gestionar Incidentes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Incidente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auditoria/logs/": {
      "get": {
        "operationId": "listLogAuditorias",
        "description": "Consulta de logs de auditoría con filtros",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogAuditoria"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auditoria/logs/{id}/": {
      "get": {
        "operationId": "retrieveLogAuditoria",
        "description": "Consulta de logs de auditoría con filtros",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogAuditoria"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auditoria/firmas/": {
      "get": {
        "operationId": "listElectronicSignatures",
        "description": "ViewSet para gestionar Firmas Electrónicas",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ElectronicSignature"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createElectronicSignature",
        "description": "ViewSet para gestionar Firmas Electrónicas",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSignature"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateSignature"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateSignature"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSignature"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auditoria/firmas/{id}/": {
      "get": {
        "operationId": "retrieveElectronicSignature",
        "description": "ViewSet para gestionar Firmas Electrónicas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Electronic Signature.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicSignature"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateElectronicSignature",
        "description": "ViewSet para gestionar Firmas Electrónicas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Electronic Signature.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicSignature"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicSignature"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicSignature"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicSignature"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateElectronicSignature",
        "description": "ViewSet para gestionar Firmas Electrónicas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Electronic Signature.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicSignature"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicSignature"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicSignature"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicSignature"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyElectronicSignature",
        "description": "ViewSet para gestionar Firmas Electrónicas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Electronic Signature.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/kpis/resumen_dashboard/": {
      "get": {
        "operationId": "listKpiDashboards",
        "description": "Vista para resumen del dashboard\nGET /api/kpis/resumen_dashboard/",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/kpis/oee/": {
      "get": {
        "operationId": "listKpiOEEs",
        "description": "Vista para calcular OEE (Overall Equipment Effectiveness)\nGET /api/kpis/oee/?desde=YYYY-MM-DD&hasta=YYYY-MM-DD&turno=M",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/kpis/historial_produccion/": {
      "get": {
        "operationId": "listHistorialProduccions",
        "description": "Entregra series temporales de la producción diaria.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/kpis/alertas/": {
      "get": {
        "operationId": "listAlertases",
        "description": "Provee un resumen de alertas críticas y operativas.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/kpis/live_alerts/": {
      "get": {
        "operationId": "listLiveAlertses",
        "description": "Entrega eventos recientes con nivel de severidad para el monitoreo en vivo.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/usuarios/": {
      "get": {
        "operationId": "listUsers",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UsuarioDetalle"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrearUsuario"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CrearUsuario"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CrearUsuario"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrearUsuario"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/usuarios/me/": {
      "get": {
        "operationId": "meUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioDetalle"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/usuarios/{id}/": {
      "get": {
        "operationId": "retrieveUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este usuario.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioDetalle"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este usuario.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDetalle"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDetalle"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDetalle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioDetalle"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este usuario.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDetalle"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDetalle"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDetalle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioDetalle"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este usuario.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auth/me/": {
      "get": {
        "operationId": "listme_views",
        "description": "Obtener información del usuario actual\nGET /api/auth/me/",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/kpis/export.csv": {
      "get": {
        "operationId": "listKpiExportCSVs",
        "description": "Vista para exportar KPIs en CSV\nGET /api/kpis/export.csv?desde=YYYY-MM-DD&hasta=YYYY-MM-DD",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/buscar/": {
      "get": {
        "operationId": "listBusquedaGlobals",
        "description": "Vista para búsqueda global en el sistema\nGET /api/buscar?q=texto&limit=20",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/ubicaciones/": {
      "get": {
        "operationId": "listUbicacions",
        "description": "ViewSet para gestionar Ubicaciones",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Ubicacion"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createUbicacion",
        "description": "ViewSet para gestionar Ubicaciones",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ubicacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/ubicaciones/{id}/": {
      "get": {
        "operationId": "retrieveUbicacion",
        "description": "ViewSet para gestionar Ubicaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Ubicación.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ubicacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateUbicacion",
        "description": "ViewSet para gestionar Ubicaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Ubicación.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ubicacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateUbicacion",
        "description": "ViewSet para gestionar Ubicaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Ubicación.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Ubicacion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ubicacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyUbicacion",
        "description": "ViewSet para gestionar Ubicaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Ubicación.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/maquinas/": {
      "get": {
        "operationId": "listMaquinas",
        "description": "ViewSet para gestionar M�quinas",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Maquina"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createMaquina",
        "description": "ViewSet para gestionar M�quinas",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Maquina"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Maquina"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Maquina"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Maquina"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/maquinas/{id}/": {
      "get": {
        "operationId": "retrieveMaquina",
        "description": "ViewSet para gestionar M�quinas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Máquina.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Maquina"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateMaquina",
        "description": "ViewSet para gestionar M�quinas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Máquina.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Maquina"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Maquina"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Maquina"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Maquina"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateMaquina",
        "description": "ViewSet para gestionar M�quinas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Máquina.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Maquina"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Maquina"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Maquina"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Maquina"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyMaquina",
        "description": "ViewSet para gestionar M�quinas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Máquina.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/maquinas/{id}/lotes_recientes/": {
      "get": {
        "operationId": "lotesRecientesMaquina",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Máquina.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Maquina"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/productos/": {
      "get": {
        "operationId": "listProductos",
        "description": "ViewSet para gestionar Productos",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Producto"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createProducto",
        "description": "ViewSet para gestionar Productos",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/productos/{id}/": {
      "get": {
        "operationId": "retrieveProducto",
        "description": "ViewSet para gestionar Productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Producto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateProducto",
        "description": "ViewSet para gestionar Productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Producto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateProducto",
        "description": "ViewSet para gestionar Productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Producto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyProducto",
        "description": "ViewSet para gestionar Productos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Producto.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/formulas/": {
      "get": {
        "operationId": "listFormulas",
        "description": "ViewSet para gestionar F�rmulas",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Formula"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createFormula",
        "description": "ViewSet para gestionar F�rmulas",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Formula"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Formula"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Formula"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Formula"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/formulas/{id}/": {
      "get": {
        "operationId": "retrieveFormula",
        "description": "ViewSet para gestionar F�rmulas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Fórmula.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Formula"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateFormula",
        "description": "ViewSet para gestionar F�rmulas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Fórmula.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Formula"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Formula"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Formula"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Formula"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateFormula",
        "description": "ViewSet para gestionar F�rmulas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Fórmula.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Formula"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Formula"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Formula"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Formula"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyFormula",
        "description": "ViewSet para gestionar F�rmulas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Fórmula.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/etapas-produccion/": {
      "get": {
        "operationId": "listEtapaProduccions",
        "description": "ViewSet para gestionar Etapas de Producci�n",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EtapaProduccion"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createEtapaProduccion",
        "description": "ViewSet para gestionar Etapas de Producci�n",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EtapaProduccion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EtapaProduccion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EtapaProduccion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaProduccion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/etapas-produccion/{id}/": {
      "get": {
        "operationId": "retrieveEtapaProduccion",
        "description": "ViewSet para gestionar Etapas de Producci�n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaProduccion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateEtapaProduccion",
        "description": "ViewSet para gestionar Etapas de Producci�n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EtapaProduccion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EtapaProduccion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EtapaProduccion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaProduccion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateEtapaProduccion",
        "description": "ViewSet para gestionar Etapas de Producci�n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EtapaProduccion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/EtapaProduccion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EtapaProduccion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaProduccion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyEtapaProduccion",
        "description": "ViewSet para gestionar Etapas de Producci�n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Producción.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/turnos/": {
      "get": {
        "operationId": "listTurnos",
        "description": "ViewSet para gestionar Turnos",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Turno"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createTurno",
        "description": "ViewSet para gestionar Turnos",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Turno"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Turno"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Turno"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Turno"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/turnos/{id}/": {
      "get": {
        "operationId": "retrieveTurno",
        "description": "ViewSet para gestionar Turnos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Turno.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Turno"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateTurno",
        "description": "ViewSet para gestionar Turnos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Turno.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Turno"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Turno"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Turno"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Turno"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateTurno",
        "description": "ViewSet para gestionar Turnos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Turno.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Turno"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Turno"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Turno"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Turno"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyTurno",
        "description": "ViewSet para gestionar Turnos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Turno.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Un término de búsqueda.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/notificaciones/": {
      "get": {
        "operationId": "listNotificacions",
        "description": "ViewSet para gestionar Notificaciones",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Un número de página dentro del conjunto de resultados paginado.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Número de resultados a devolver por página.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "results"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Notificacion"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createNotificacion",
        "description": "ViewSet para gestionar Notificaciones",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notificacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/notificaciones/no_leidas/": {
      "get": {
        "operationId": "noLeidasNotificacion",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notificacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/notificaciones/{id}/": {
      "get": {
        "operationId": "retrieveNotificacion",
        "description": "ViewSet para gestionar Notificaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notificacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateNotificacion",
        "description": "ViewSet para gestionar Notificaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notificacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateNotificacion",
        "description": "ViewSet para gestionar Notificaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notificacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyNotificacion",
        "description": "ViewSet para gestionar Notificaciones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Qué campo usar para ordenar los resultados.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/{id}/cancelar/": {
      "post": {
        "operationId": "cancelarLote",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/{id}/liberar/": {
      "post": {
        "operationId": "liberarLote",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/{id}/mostrar/": {
      "post": {
        "operationId": "mostrarLote",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/{id}/ocultar/": {
      "post": {
        "operationId": "ocultarLote",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes/{id}/rechazar/": {
      "post": {
        "operationId": "rechazarLote",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Lote de Producción.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Lote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lote"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes-etapas/{id}/completar/": {
      "post": {
        "operationId": "completarLoteEtapa",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Lote.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteEtapa"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes-etapas/{id}/iniciar/": {
      "post": {
        "operationId": "iniciarLoteEtapa",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Lote.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteEtapa"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/lotes-etapas/{id}/pausar/": {
      "post": {
        "operationId": "pausarLoteEtapa",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Etapa de Lote.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LoteEtapa"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoteEtapa"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/produccion/paradas/{id}/finalizar/": {
      "post": {
        "operationId": "finalizarParada",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Parada.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Parada"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parada"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/desviaciones/{id}/cerrar/": {
      "post": {
        "operationId": "cerrarDesviacion",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Desviación.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Desviacion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Desviacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/calidad/documentos/{id}/aprobar/": {
      "post": {
        "operationId": "aprobarDocumentoVersionado",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Documento Versionado.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DocumentoVersionado"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentoVersionado"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/{id}/asignar/": {
      "post": {
        "operationId": "asignarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/{id}/iniciar/": {
      "post": {
        "operationId": "iniciarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/{id}/pausar/": {
      "post": {
        "operationId": "pausarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/{id}/completar/": {
      "post": {
        "operationId": "completarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/{id}/cerrar/": {
      "post": {
        "operationId": "cerrarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/ordenes-trabajo/{id}/asignar/": {
      "post": {
        "operationId": "asignarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/ordenes-trabajo/{id}/cerrar/": {
      "post": {
        "operationId": "cerrarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/ordenes-trabajo/{id}/completar/": {
      "post": {
        "operationId": "completarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/ordenes-trabajo/{id}/iniciar/": {
      "post": {
        "operationId": "iniciarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mantenimiento/ordenes-trabajo/{id}/pausar/": {
      "post": {
        "operationId": "pausarOrdenTrabajo",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Orden de Trabajo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OrdenTrabajo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenTrabajo"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auditoria/firmas/{id}/invalidar/": {
      "post": {
        "operationId": "invalidarElectronicSignature",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este Electronic Signature.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicSignature"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicSignature"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ElectronicSignature"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicSignature"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/usuarios/cambiar_mi_password/": {
      "post": {
        "operationId": "cambiarMiPasswordUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CambiarPassword"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CambiarPassword"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CambiarPassword"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CambiarPassword"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/usuarios/{id}/cambiar_password/": {
      "post": {
        "operationId": "cambiarPasswordUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este usuario.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CambiarPassword"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CambiarPassword"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CambiarPassword"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CambiarPassword"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/usuarios/{id}/reactivar/": {
      "post": {
        "operationId": "reactivarUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Un valor de entero único que identifique este usuario.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDetalle"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDetalle"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioDetalle"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioDetalle"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auth/login/": {
      "post": {
        "operationId": "createlogin_view",
        "description": "Endpoint de login\nPOST /api/auth/login/",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auth/logout/": {
      "post": {
        "operationId": "createlogout_view",
        "description": "Endpoint de logout\nPOST /api/auth/logout/",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auth/refresh/": {
      "post": {
        "operationId": "createrefresh_token_view",
        "description": "Refrescar access token\nPOST /api/auth/refresh/",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auth/register/": {
      "post": {
        "operationId": "createregister_view",
        "description": "Registro de nuevo usuario (OPCIONAL - solo para demo)\nPOST /api/auth/register/",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/notificaciones/marcar_todas_leidas/": {
      "post": {
        "operationId": "marcarTodasLeidasNotificacion",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notificacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/notificaciones/{id}/marcar_leida/": {
      "post": {
        "operationId": "marcarLeidaNotificacion",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Notificacion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notificacion"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/token/": {
      "post": {
        "operationId": "createTokenObtainPair",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPair"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/token/refresh/": {
      "post": {
        "operationId": "createTokenRefresh",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/usuarios/update_me/": {
      "put": {
        "operationId": "updateMeUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioPerfil"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioPerfil"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioPerfil"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioPerfil"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "updateMeUser",
        "description": "ViewSet para gestión de usuarios (solo admin/superuser).",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioPerfil"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioPerfil"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioPerfil"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioPerfil"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "LoteList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo_lote": {
            "type": "string",
            "maxLength": 50
          },
          "producto": {
            "type": "integer"
          },
          "producto_nombre": {
            "type": "string",
            "readOnly": true
          },
          "estado": {
            "enum": [
              "PLANIFICADO",
              "EN_PROCESO",
              "PAUSADO",
              "FINALIZADO",
              "CANCELADO",
              "RECHAZADO",
              "LIBERADO"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "prioridad": {
            "enum": [
              "BAJA",
              "NORMAL",
              "ALTA",
              "URGENTE"
            ],
            "type": "string"
          },
          "prioridad_display": {
            "type": "string",
            "readOnly": true
          },
          "cantidad_planificada": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": 1,
            "format": "int64"
          },
          "cantidad_producida": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64"
          },
          "cantidad_rechazada": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64"
          },
          "unidad": {
            "type": "string",
            "maxLength": 20
          },
          "rendimiento_porcentaje": {
            "type": "string",
            "readOnly": true
          },
          "rendimiento": {
            "type": "string",
            "readOnly": true
          },
          "fecha_planificada_inicio": {
            "type": "string",
            "format": "date-time"
          },
          "fecha_real_inicio": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fecha_planificada_fin": {
            "type": "string",
            "format": "date-time"
          },
          "fecha_real_fin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fecha_creacion": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "supervisor": {
            "type": "integer"
          },
          "supervisor_nombre": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "codigo_lote",
          "producto",
          "cantidad_planificada",
          "unidad",
          "fecha_planificada_inicio",
          "fecha_planificada_fin",
          "supervisor"
        ]
      },
      "Lote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo_lote": {
            "type": "string",
            "maxLength": 50
          },
          "producto": {
            "type": "integer"
          },
          "producto_nombre": {
            "type": "string",
            "readOnly": true
          },
          "formula": {
            "type": "integer"
          },
          "formula_version": {
            "type": "string",
            "readOnly": true
          },
          "cantidad_planificada": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": 1,
            "format": "int64"
          },
          "cantidad_producida": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64"
          },
          "cantidad_rechazada": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64"
          },
          "unidad": {
            "type": "string",
            "maxLength": 20
          },
          "estado": {
            "enum": [
              "PLANIFICADO",
              "EN_PROCESO",
              "PAUSADO",
              "FINALIZADO",
              "CANCELADO",
              "RECHAZADO",
              "LIBERADO"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "prioridad": {
            "enum": [
              "BAJA",
              "NORMAL",
              "ALTA",
              "URGENTE"
            ],
            "type": "string"
          },
          "prioridad_display": {
            "type": "string",
            "readOnly": true
          },
          "fecha_planificada_inicio": {
            "type": "string",
            "format": "date-time"
          },
          "fecha_real_inicio": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fecha_planificada_fin": {
            "type": "string",
            "format": "date-time"
          },
          "fecha_real_fin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "turno": {
            "type": "integer"
          },
          "turno_nombre": {
            "type": "string",
            "readOnly": true
          },
          "supervisor": {
            "type": "integer"
          },
          "supervisor_nombre": {
            "type": "string",
            "readOnly": true
          },
          "observaciones": {
            "type": "string"
          },
          "creado_por": {
            "type": "string",
            "readOnly": true
          },
          "creado_por_nombre": {
            "type": "string",
            "readOnly": true
          },
          "fecha_creacion": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "rendimiento": {
            "type": "string",
            "readOnly": true
          },
          "visible": {
            "type": "boolean"
          },
          "cancelado_por": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "cancelado_por_nombre": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "fecha_cancelacion": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "motivo_cancelacion": {
            "type": "string"
          }
        },
        "required": [
          "codigo_lote",
          "producto",
          "formula",
          "cantidad_planificada",
          "unidad",
          "fecha_planificada_inicio",
          "fecha_planificada_fin",
          "turno",
          "supervisor"
        ]
      },
      "LoteEtapa": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "lote": {
            "type": "integer"
          },
          "lote_codigo": {
            "type": "string",
            "readOnly": true
          },
          "etapa": {
            "type": "integer"
          },
          "etapa_nombre": {
            "type": "string",
            "readOnly": true
          },
          "orden": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64"
          },
          "maquina": {
            "type": "integer"
          },
          "maquina_nombre": {
            "type": "string",
            "readOnly": true
          },
          "estado": {
            "enum": [
              "PENDIENTE",
              "EN_PROCESO",
              "PAUSADO",
              "COMPLETADO",
              "RECHAZADO"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "fecha_inicio": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fecha_fin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duracion_minutos": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "operario": {
            "type": "integer"
          },
          "operario_nombre": {
            "type": "string",
            "readOnly": true
          },
          "cantidad_entrada": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000,
            "nullable": true
          },
          "cantidad_salida": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000,
            "nullable": true
          },
          "cantidad_merma": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000
          },
          "porcentaje_rendimiento": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 1000,
            "minimum": -1000,
            "readOnly": true,
            "nullable": true
          },
          "observaciones": {
            "type": "string"
          }
        },
        "required": [
          "lote",
          "etapa",
          "orden",
          "maquina",
          "operario"
        ]
      },
      "Parada": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "lote_etapa": {
            "type": "integer"
          },
          "lote_id": {
            "type": "integer",
            "readOnly": true
          },
          "lote_codigo": {
            "type": "string",
            "readOnly": true
          },
          "etapa_id": {
            "type": "integer",
            "readOnly": true
          },
          "etapa_codigo": {
            "type": "string",
            "readOnly": true
          },
          "etapa_nombre": {
            "type": "string",
            "readOnly": true
          },
          "tipo": {
            "enum": [
              "PLANIFICADA",
              "NO_PLANIFICADA"
            ],
            "type": "string"
          },
          "tipo_display": {
            "type": "string",
            "readOnly": true
          },
          "categoria": {
            "enum": [
              "FALLA_EQUIPO",
              "FALTA_INSUMO",
              "CAMBIO_FORMATO",
              "LIMPIEZA",
              "CALIDAD",
              "OTROS"
            ],
            "type": "string"
          },
          "categoria_display": {
            "type": "string",
            "readOnly": true
          },
          "fecha_inicio": {
            "type": "string",
            "format": "date-time"
          },
          "fecha_fin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duracion_minutos": {
            "type": "integer",
            "readOnly": true,
            "nullable": true
          },
          "duracion_actual_minutos": {
            "type": "string",
            "readOnly": true
          },
          "duracion_legible": {
            "type": "string",
            "readOnly": true
          },
          "descripcion": {
            "type": "string"
          },
          "solucion": {
            "type": "string"
          },
          "registrado_por": {
            "type": "integer"
          },
          "registrado_por_nombre": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "lote_etapa",
          "tipo",
          "categoria",
          "fecha_inicio",
          "descripcion",
          "registrado_por"
        ]
      },
      "ControlCalidad": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "lote_etapa": {
            "type": "integer"
          },
          "tipo_control": {
            "type": "string",
            "description": "ej: Peso promedio, Dureza, Friabilidad",
            "maxLength": 100
          },
          "valor_medido": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1000000,
            "minimum": -1000000
          },
          "unidad": {
            "type": "string",
            "maxLength": 20
          },
          "valor_minimo": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1000000,
            "minimum": -1000000
          },
          "valor_maximo": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.0001,
            "maximum": 1000000,
            "minimum": -1000000
          },
          "conforme": {
            "type": "boolean",
            "readOnly": true
          },
          "fecha_control": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "controlado_por": {
            "type": "integer"
          },
          "observaciones": {
            "type": "string"
          }
        },
        "required": [
          "lote_etapa",
          "tipo_control",
          "valor_medido",
          "unidad",
          "valor_minimo",
          "valor_maximo",
          "controlado_por"
        ]
      },
      "Desviacion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 30
          },
          "lote": {
            "type": "integer",
            "nullable": true
          },
          "lote_codigo": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "lote_etapa": {
            "type": "integer",
            "nullable": true
          },
          "lote_etapa_descripcion": {
            "type": "string",
            "readOnly": true
          },
          "titulo": {
            "type": "string",
            "maxLength": 200
          },
          "descripcion": {
            "type": "string"
          },
          "severidad": {
            "enum": [
              "CRITICA",
              "MAYOR",
              "MENOR"
            ],
            "type": "string"
          },
          "severidad_display": {
            "type": "string",
            "readOnly": true
          },
          "estado": {
            "enum": [
              "ABIERTA",
              "EN_INVESTIGACION",
              "EN_CAPA",
              "CERRADA"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "fecha_deteccion": {
            "type": "string",
            "format": "date-time"
          },
          "detectado_por": {
            "type": "integer"
          },
          "detectado_por_nombre": {
            "type": "string",
            "readOnly": true
          },
          "area_responsable": {
            "type": "string",
            "maxLength": 50
          },
          "impacto_calidad": {
            "type": "string"
          },
          "impacto_seguridad": {
            "type": "string"
          },
          "impacto_eficacia": {
            "type": "string"
          },
          "investigacion_realizada": {
            "type": "string"
          },
          "causa_raiz": {
            "type": "string"
          },
          "accion_inmediata": {
            "type": "string"
          },
          "requiere_capa": {
            "type": "boolean"
          },
          "fecha_cierre": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "cerrado_por": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "cerrado_por_nombre": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "codigo",
          "titulo",
          "descripcion",
          "severidad",
          "fecha_deteccion",
          "detectado_por"
        ]
      },
      "AccionCorrectiva": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "incidente": {
            "type": "integer"
          },
          "incidente_codigo": {
            "type": "string",
            "readOnly": true
          },
          "incidente_titulo": {
            "type": "string",
            "readOnly": true
          },
          "tipo": {
            "enum": [
              "CORRECTIVA",
              "PREVENTIVA"
            ],
            "type": "string"
          },
          "tipo_display": {
            "type": "string",
            "readOnly": true
          },
          "descripcion": {
            "type": "string"
          },
          "responsable": {
            "type": "integer"
          },
          "responsable_nombre": {
            "type": "string",
            "readOnly": true
          },
          "fecha_planificada": {
            "type": "string",
            "format": "date"
          },
          "fecha_implementacion": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "estado": {
            "enum": [
              "PLANIFICADA",
              "EN_PROCESO",
              "COMPLETADA",
              "CANCELADA"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "eficacia_verificada": {
            "type": "boolean"
          },
          "verificado_por": {
            "type": "integer",
            "nullable": true
          },
          "verificado_por_nombre": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "fecha_verificacion": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "observaciones": {
            "type": "string"
          }
        },
        "required": [
          "incidente",
          "tipo",
          "descripcion",
          "responsable",
          "fecha_planificada"
        ]
      },
      "DocumentoVersionado": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 50
          },
          "titulo": {
            "type": "string",
            "maxLength": 200
          },
          "tipo": {
            "enum": [
              "SOP",
              "IT",
              "FT",
              "PL",
              "REG"
            ],
            "type": "string"
          },
          "tipo_display": {
            "type": "string",
            "readOnly": true
          },
          "estado": {
            "enum": [
              "BORRADOR",
              "EN_REVISION",
              "APROBADO",
              "VIGENTE",
              "OBSOLETO"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "maxLength": 20
          },
          "fecha_creacion": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "creado_por": {
            "type": "string",
            "readOnly": true
          },
          "creado_por_nombre": {
            "type": "string",
            "readOnly": true
          },
          "fecha_revision": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "revisado_por": {
            "type": "integer",
            "nullable": true
          },
          "revisado_por_nombre": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "fecha_aprobacion": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "aprobado_por": {
            "type": "integer",
            "nullable": true
          },
          "aprobado_por_nombre": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "fecha_vigencia_inicio": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "fecha_vigencia_fin": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "contenido": {
            "type": "string",
            "description": "Contenido del documento o referencia"
          },
          "archivo_url": {
            "type": "string",
            "maxLength": 500
          },
          "hash_sha256": {
            "type": "string",
            "readOnly": true
          },
          "cambios_version": {
            "type": "string",
            "description": "Resumen de cambios en esta versión"
          },
          "documento_anterior": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "codigo",
          "titulo",
          "tipo",
          "version"
        ]
      },
      "Insumo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 30
          },
          "nombre": {
            "type": "string",
            "maxLength": 200
          },
          "categoria": {
            "type": "integer"
          },
          "categoria_nombre": {
            "type": "string",
            "readOnly": true
          },
          "unidad_medida": {
            "type": "string",
            "description": "kg, L, unidades",
            "maxLength": 20
          },
          "stock_minimo": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000
          },
          "stock_maximo": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000
          },
          "punto_reorden": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000
          },
          "stock_disponible": {
            "type": "string",
            "readOnly": true
          },
          "activo": {
            "type": "boolean"
          }
        },
        "required": [
          "codigo",
          "nombre",
          "categoria",
          "unidad_medida",
          "stock_minimo",
          "stock_maximo",
          "punto_reorden"
        ]
      },
      "LoteInsumo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "insumo": {
            "type": "integer"
          },
          "insumo_nombre": {
            "type": "string",
            "readOnly": true
          },
          "codigo_lote_proveedor": {
            "type": "string",
            "maxLength": 50
          },
          "fecha_recepcion": {
            "type": "string",
            "format": "date"
          },
          "fecha_vencimiento": {
            "type": "string",
            "format": "date"
          },
          "dias_vencimiento": {
            "type": "string",
            "readOnly": true
          },
          "cantidad_inicial": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000
          },
          "cantidad_actual": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000
          },
          "unidad": {
            "type": "string",
            "maxLength": 20
          },
          "ubicacion": {
            "type": "integer"
          },
          "ubicacion_nombre": {
            "type": "string",
            "readOnly": true
          },
          "ubicacion_detalle": {
            "type": "string",
            "description": "ej: Estante A-3",
            "maxLength": 100
          },
          "estado": {
            "enum": [
              "CUARENTENA",
              "APROBADO",
              "RECHAZADO",
              "AGOTADO"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "proveedor": {
            "type": "string",
            "maxLength": 200
          }
        },
        "required": [
          "insumo",
          "codigo_lote_proveedor",
          "fecha_recepcion",
          "fecha_vencimiento",
          "cantidad_inicial",
          "cantidad_actual",
          "unidad",
          "ubicacion",
          "proveedor"
        ]
      },
      "Repuesto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 30
          },
          "nombre": {
            "type": "string",
            "maxLength": 200
          },
          "categoria": {
            "enum": [
              "MECANICO",
              "ELECTRICO",
              "NEUMATICO",
              "ELECTRONICO",
              "CONSUMIBLE",
              "OTRO"
            ],
            "type": "string"
          },
          "categoria_display": {
            "type": "string",
            "readOnly": true
          },
          "stock_minimo": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "format": "int64",
            "minimum": 0
          },
          "stock_actual": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "format": "int64",
            "minimum": 0
          },
          "punto_reorden": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "format": "int64",
            "minimum": 0
          },
          "ubicacion": {
            "type": "integer"
          },
          "ubicacion_nombre": {
            "type": "string",
            "readOnly": true
          },
          "critico": {
            "type": "boolean",
            "description": "Repuesto crítico para operación"
          },
          "activo": {
            "type": "boolean"
          }
        },
        "required": [
          "codigo",
          "nombre",
          "categoria",
          "stock_minimo",
          "stock_actual",
          "punto_reorden",
          "ubicacion"
        ]
      },
      "ProductoTerminado": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "lote": {
            "type": "integer"
          },
          "lote_codigo": {
            "type": "string",
            "readOnly": true
          },
          "producto_nombre": {
            "type": "string",
            "readOnly": true
          },
          "cantidad": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": 1,
            "format": "int64"
          },
          "unidad": {
            "type": "string",
            "maxLength": 20
          },
          "fecha_fabricacion": {
            "type": "string",
            "format": "date"
          },
          "fecha_vencimiento": {
            "type": "string",
            "format": "date"
          },
          "ubicacion": {
            "type": "integer"
          },
          "ubicacion_nombre": {
            "type": "string",
            "readOnly": true
          },
          "ubicacion_detalle": {
            "type": "string",
            "maxLength": 100
          },
          "estado": {
            "enum": [
              "CUARENTENA",
              "LIBERADO",
              "RETENIDO",
              "VENCIDO"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "lote",
          "cantidad",
          "unidad",
          "fecha_fabricacion",
          "fecha_vencimiento",
          "ubicacion"
        ]
      },
      "MovimientoInventario": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "tipo_item": {
            "enum": [
              "INSUMO",
              "REPUESTO",
              "PRODUCTO_TERMINADO"
            ],
            "type": "string"
          },
          "tipo_item_display": {
            "type": "string",
            "readOnly": true
          },
          "item_id": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64",
            "description": "ID del Insumo, Repuesto o Producto"
          },
          "lote_item_id": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64",
            "nullable": true,
            "description": "ID del LoteInsumo o ProductoTerminado"
          },
          "tipo_movimiento": {
            "enum": [
              "ENTRADA",
              "SALIDA",
              "AJUSTE",
              "TRANSFERENCIA"
            ],
            "type": "string"
          },
          "tipo_movimiento_display": {
            "type": "string",
            "readOnly": true
          },
          "motivo": {
            "enum": [
              "COMPRA",
              "PRODUCCION",
              "MANTENIMIENTO",
              "AJUSTE_INVENTARIO",
              "VENCIMIENTO",
              "DEVOLUCION"
            ],
            "type": "string"
          },
          "cantidad": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000
          },
          "unidad": {
            "type": "string",
            "maxLength": 20
          },
          "ubicacion_origen": {
            "type": "integer",
            "nullable": true
          },
          "ubicacion_destino": {
            "type": "integer",
            "nullable": true
          },
          "referencia_documento": {
            "type": "string",
            "description": "OC-123, LOTE-2025-001, WO-456",
            "maxLength": 100
          },
          "fecha_movimiento": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "registrado_por": {
            "type": "integer"
          },
          "observaciones": {
            "type": "string"
          }
        },
        "required": [
          "tipo_item",
          "item_id",
          "tipo_movimiento",
          "motivo",
          "cantidad",
          "unidad",
          "registrado_por"
        ]
      },
      "OrdenTrabajoList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 30
          },
          "maquina": {
            "type": "integer"
          },
          "maquina_nombre": {
            "type": "string",
            "readOnly": true
          },
          "tipo": {
            "type": "integer"
          },
          "tipo_nombre": {
            "type": "string",
            "readOnly": true
          },
          "prioridad": {
            "enum": [
              "BAJA",
              "NORMAL",
              "ALTA",
              "URGENTE"
            ],
            "type": "string"
          },
          "prioridad_display": {
            "type": "string",
            "readOnly": true
          },
          "estado": {
            "enum": [
              "ABIERTA",
              "ASIGNADA",
              "EN_PROCESO",
              "PAUSADA",
              "COMPLETADA",
              "CANCELADA"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "titulo": {
            "type": "string",
            "maxLength": 200
          },
          "fecha_creacion": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "fecha_planificada": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "asignada_a": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "codigo",
          "maquina",
          "tipo",
          "titulo"
        ]
      },
      "OrdenTrabajo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 30
          },
          "tipo": {
            "type": "integer"
          },
          "tipo_nombre": {
            "type": "string",
            "readOnly": true
          },
          "maquina": {
            "type": "integer"
          },
          "maquina_nombre": {
            "type": "string",
            "readOnly": true
          },
          "prioridad": {
            "enum": [
              "BAJA",
              "NORMAL",
              "ALTA",
              "URGENTE"
            ],
            "type": "string"
          },
          "prioridad_display": {
            "type": "string",
            "readOnly": true
          },
          "estado": {
            "enum": [
              "ABIERTA",
              "ASIGNADA",
              "EN_PROCESO",
              "PAUSADA",
              "COMPLETADA",
              "CANCELADA"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "titulo": {
            "type": "string",
            "maxLength": 200
          },
          "descripcion": {
            "type": "string"
          },
          "fecha_creacion": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "fecha_planificada": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fecha_inicio": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fecha_fin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duracion_real_horas": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 10000,
            "minimum": -10000,
            "readOnly": true,
            "nullable": true
          },
          "creada_por": {
            "type": "string",
            "readOnly": true
          },
          "creada_por_nombre": {
            "type": "string",
            "readOnly": true
          },
          "asignada_a": {
            "type": "integer",
            "nullable": true
          },
          "completada_por": {
            "type": "integer",
            "nullable": true
          },
          "trabajo_realizado": {
            "type": "string"
          },
          "observaciones": {
            "type": "string"
          },
          "requiere_parada_produccion": {
            "type": "boolean"
          },
          "costo_estimado": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000,
            "nullable": true
          },
          "costo_real": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000,
            "nullable": true
          }
        },
        "required": [
          "codigo",
          "tipo",
          "maquina",
          "titulo",
          "descripcion"
        ]
      },
      "TipoMantenimiento": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 10
          },
          "nombre": {
            "type": "string",
            "maxLength": 50
          },
          "descripcion": {
            "type": "string"
          },
          "activo": {
            "type": "boolean"
          }
        },
        "required": [
          "codigo",
          "nombre"
        ]
      },
      "TipoIncidente": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 20
          },
          "nombre": {
            "type": "string",
            "maxLength": 100
          },
          "descripcion": {
            "type": "string"
          },
          "requiere_investigacion": {
            "type": "boolean"
          },
          "activo": {
            "type": "boolean"
          }
        },
        "required": [
          "codigo",
          "nombre"
        ]
      },
      "IncidenteList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 30
          },
          "tipo": {
            "type": "integer"
          },
          "tipo_nombre": {
            "type": "string",
            "readOnly": true
          },
          "severidad": {
            "enum": [
              "MENOR",
              "MODERADA",
              "MAYOR",
              "CRITICA"
            ],
            "type": "string"
          },
          "severidad_display": {
            "type": "string",
            "readOnly": true
          },
          "estado": {
            "enum": [
              "ABIERTO",
              "EN_INVESTIGACION",
              "ACCION_CORRECTIVA",
              "CERRADO"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "titulo": {
            "type": "string",
            "maxLength": 200
          },
          "fecha_ocurrencia": {
            "type": "string",
            "format": "date-time"
          },
          "reportado_por": {
            "type": "integer"
          },
          "reportado_por_nombre": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "codigo",
          "tipo",
          "severidad",
          "titulo",
          "fecha_ocurrencia",
          "reportado_por"
        ]
      },
      "Incidente": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 30
          },
          "tipo": {
            "type": "integer"
          },
          "tipo_nombre": {
            "type": "string",
            "readOnly": true
          },
          "severidad": {
            "enum": [
              "MENOR",
              "MODERADA",
              "MAYOR",
              "CRITICA"
            ],
            "type": "string"
          },
          "severidad_display": {
            "type": "string",
            "readOnly": true
          },
          "estado": {
            "enum": [
              "ABIERTO",
              "EN_INVESTIGACION",
              "ACCION_CORRECTIVA",
              "CERRADO"
            ],
            "type": "string"
          },
          "estado_display": {
            "type": "string",
            "readOnly": true
          },
          "titulo": {
            "type": "string",
            "maxLength": 200
          },
          "descripcion": {
            "type": "string"
          },
          "fecha_ocurrencia": {
            "type": "string",
            "format": "date-time"
          },
          "ubicacion": {
            "type": "integer"
          },
          "ubicacion_nombre": {
            "type": "string",
            "readOnly": true
          },
          "maquina": {
            "type": "integer",
            "nullable": true
          },
          "maquina_nombre": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "lote_afectado": {
            "type": "integer",
            "nullable": true
          },
          "lote_codigo": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "reportado_por": {
            "type": "string",
            "readOnly": true
          },
          "reportado_por_nombre": {
            "type": "string",
            "readOnly": true
          },
          "fecha_reporte": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "asignado_a": {
            "type": "integer",
            "nullable": true
          },
          "impacto_produccion": {
            "type": "string"
          },
          "impacto_calidad": {
            "type": "string"
          },
          "impacto_seguridad": {
            "type": "string"
          },
          "requiere_notificacion_anmat": {
            "type": "boolean"
          }
        },
        "required": [
          "codigo",
          "tipo",
          "severidad",
          "titulo",
          "descripcion",
          "fecha_ocurrencia",
          "ubicacion"
        ]
      },
      "LogAuditoria": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "usuario": {
            "type": "integer",
            "nullable": true
          },
          "usuario_nombre": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "accion": {
            "enum": [
              "CREAR",
              "MODIFICAR",
              "ELIMINAR",
              "CANCELAR",
              "VER",
              "EXPORTAR"
            ],
            "type": "string"
          },
          "accion_display": {
            "type": "string",
            "readOnly": true
          },
          "modelo": {
            "type": "string",
            "description": "Nombre del modelo afectado",
            "maxLength": 100
          },
          "objeto_id": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64"
          },
          "objeto_str": {
            "type": "string",
            "maxLength": 200
          },
          "cambios": {
            "type": "object",
            "description": "Estructura: {campo: {antes: X, despues: Y}}"
          },
          "ip_address": {
            "type": "string",
            "nullable": true
          },
          "user_agent": {
            "type": "string",
            "maxLength": 500
          },
          "fecha": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "accion",
          "modelo",
          "objeto_id",
          "objeto_str"
        ]
      },
      "ElectronicSignature": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "type": "integer",
            "description": "User who signed"
          },
          "user_fullname": {
            "type": "string",
            "readOnly": true
          },
          "action": {
            "enum": [
              "APPROVE",
              "REVIEW",
              "RELEASE",
              "REJECT",
              "AUTHORIZE",
              "VERIFY"
            ],
            "type": "string",
            "description": "Action being signed"
          },
          "action_display": {
            "type": "string",
            "readOnly": true
          },
          "meaning": {
            "enum": [
              "APPROVED_BY",
              "REVIEWED_BY",
              "RELEASED_BY",
              "REJECTED_BY",
              "AUTHORIZED_BY",
              "VERIFIED_BY"
            ],
            "type": "string",
            "description": "Meaning of the signature"
          },
          "meaning_display": {
            "type": "string",
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "When the signature was applied"
          },
          "content_type": {
            "type": "string",
            "description": "Type of object being signed (e.g., 'Lote', 'OrdenTrabajo')",
            "maxLength": 100
          },
          "object_id": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64",
            "description": "ID of the object being signed"
          },
          "object_str": {
            "type": "string",
            "description": "String representation of the object",
            "maxLength": 200
          },
          "reason": {
            "type": "string",
            "description": "Reason for signing (required by 21 CFR Part 11)"
          },
          "comments": {
            "type": "string",
            "description": "Additional comments"
          },
          "signature_hash": {
            "type": "string",
            "readOnly": true,
            "description": "Hash of the signature itself (for integrity verification)"
          },
          "data_hash": {
            "type": "string",
            "readOnly": true,
            "description": "SHA-256 hash of the signed data at the time of signing"
          },
          "is_valid": {
            "type": "boolean",
            "readOnly": true,
            "description": "Whether this signature is still valid"
          },
          "invalidated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "description": "When this signature was invalidated"
          },
          "invalidated_by": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "User who invalidated this signature"
          },
          "invalidated_by_name": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "invalidation_reason": {
            "type": "string",
            "description": "Reason for invalidation"
          }
        },
        "required": [
          "user",
          "action",
          "meaning",
          "content_type",
          "object_id",
          "object_str",
          "reason"
        ]
      },
      "UsuarioDetalle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "readOnly": true,
            "description": "Obligatorio. Longitud máxima de 150 caracteres. Solo puede estar formado por letras, números y los caracteres @/./+/-/_."
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "full_name": {
            "type": "string",
            "readOnly": true
          },
          "is_active": {
            "type": "boolean",
            "readOnly": true
          },
          "is_staff": {
            "type": "boolean",
            "readOnly": true
          },
          "is_superuser": {
            "type": "boolean",
            "readOnly": true
          },
          "date_joined": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "profile": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "usuario": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "username": {
                    "type": "string",
                    "description": "Obligatorio. Longitud máxima de 150 caracteres. Solo puede estar formado por letras, números y los caracteres @/./+/-/_.",
                    "pattern": "^[\\w.@+-]+\\z",
                    "maxLength": 150
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                  },
                  "first_name": {
                    "type": "string",
                    "maxLength": 150
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 150
                  },
                  "full_name": {
                    "type": "string",
                    "readOnly": true
                  },
                  "is_staff": {
                    "type": "boolean",
                    "description": "Indica si el usuario puede ingresar a este sitio de administración."
                  },
                  "is_superuser": {
                    "type": "boolean",
                    "description": "Indica que este usuario posee todos los permisos sin que sea necesario asignarle los mismos en forma explícita."
                  }
                },
                "required": [
                  "username"
                ],
                "readOnly": true
              },
              "legajo": {
                "type": "string",
                "nullable": true,
                "maxLength": 20
              },
              "area": {
                "enum": [
                  "PRODUCCION",
                  "MANTENIMIENTO",
                  "ALMACEN",
                  "CALIDAD",
                  "ADMINISTRACION"
                ],
                "type": "string",
                "nullable": true
              },
              "area_display": {
                "type": "string",
                "readOnly": true
              },
              "turno_habitual": {
                "enum": [
                  "M",
                  "T",
                  "N",
                  "R"
                ],
                "type": "string",
                "nullable": true
              },
              "turno_display": {
                "type": "string",
                "readOnly": true
              },
              "telefono": {
                "type": "string",
                "maxLength": 20
              },
              "fecha_ingreso": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "activo": {
                "type": "boolean"
              }
            },
            "readOnly": true
          },
          "legajo": {
            "type": "string"
          },
          "area": {
            "type": "string"
          },
          "turno_habitual": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "fecha_ingreso": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        }
      },
      "Ubicacion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 20
          },
          "nombre": {
            "type": "string",
            "maxLength": 100
          },
          "tipo": {
            "enum": [
              "PRODUCCION",
              "ALMACEN",
              "MANTENIMIENTO",
              "SERVICIOS"
            ],
            "type": "string"
          },
          "tipo_display": {
            "type": "string",
            "readOnly": true
          },
          "descripcion": {
            "type": "string"
          },
          "activa": {
            "type": "boolean"
          },
          "maquinas_count": {
            "type": "integer",
            "readOnly": true
          },
          "lotes_insumo_count": {
            "type": "integer",
            "readOnly": true
          }
        },
        "required": [
          "codigo",
          "nombre",
          "tipo"
        ]
      },
      "Maquina": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 20
          },
          "nombre": {
            "type": "string",
            "maxLength": 100
          },
          "tipo": {
            "enum": [
              "COMPRESION",
              "MEZCLADO",
              "GRANULACION",
              "EMBLISTADO",
              "SERVICIOS"
            ],
            "type": "string"
          },
          "tipo_display": {
            "type": "string",
            "readOnly": true
          },
          "fabricante": {
            "type": "string",
            "maxLength": 100
          },
          "modelo": {
            "type": "string",
            "maxLength": 100
          },
          "ubicacion": {
            "type": "integer"
          },
          "ubicacion_nombre": {
            "type": "string",
            "readOnly": true
          },
          "descripcion": {
            "type": "string"
          },
          "capacidad_nominal": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100000000,
            "minimum": -100000000,
            "nullable": true
          },
          "unidad_capacidad": {
            "type": "string",
            "description": "ej: comprimidos/hora, kg/batch",
            "maxLength": 20
          },
          "activa": {
            "type": "boolean"
          },
          "fecha_instalacion": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "required": [
          "codigo",
          "nombre",
          "tipo",
          "ubicacion"
        ]
      },
      "Producto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 20
          },
          "nombre": {
            "type": "string",
            "maxLength": 200
          },
          "forma_farmaceutica": {
            "enum": [
              "COMPRIMIDO",
              "CREMA",
              "SOLUCION"
            ],
            "type": "string"
          },
          "forma_display": {
            "type": "string",
            "readOnly": true
          },
          "principio_activo": {
            "type": "string",
            "maxLength": 200
          },
          "concentracion": {
            "type": "string",
            "maxLength": 50
          },
          "unidad_medida": {
            "type": "string",
            "description": "comprimidos, gramos, ml",
            "maxLength": 20
          },
          "lote_minimo": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": 1,
            "format": "int64"
          },
          "lote_optimo": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": 1,
            "format": "int64"
          },
          "activo": {
            "type": "boolean"
          }
        },
        "required": [
          "codigo",
          "nombre",
          "forma_farmaceutica",
          "principio_activo",
          "concentracion",
          "unidad_medida",
          "lote_minimo",
          "lote_optimo"
        ]
      },
      "Formula": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "producto": {
            "type": "integer"
          },
          "producto_nombre": {
            "type": "string",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "ej: v1.0, v2.1",
            "maxLength": 20
          },
          "fecha_vigencia_desde": {
            "type": "string",
            "format": "date"
          },
          "fecha_vigencia_hasta": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "rendimiento_teorico": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 100,
            "minimum": 0
          },
          "tiempo_estimado_horas": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 0.01,
            "maximum": 1000,
            "minimum": -1000
          },
          "aprobada_por": {
            "type": "integer"
          },
          "aprobada_por_nombre": {
            "type": "string",
            "readOnly": true
          },
          "activa": {
            "type": "boolean"
          }
        },
        "required": [
          "producto",
          "version",
          "fecha_vigencia_desde",
          "rendimiento_teorico",
          "tiempo_estimado_horas",
          "aprobada_por"
        ]
      },
      "EtapaProduccion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "type": "string",
            "maxLength": 20
          },
          "nombre": {
            "type": "string",
            "maxLength": 100
          },
          "descripcion": {
            "type": "string"
          },
          "orden_tipico": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64",
            "description": "Orden típico en el proceso"
          },
          "activa": {
            "type": "boolean"
          }
        },
        "required": [
          "codigo",
          "nombre",
          "orden_tipico"
        ]
      },
      "Turno": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "codigo": {
            "enum": [
              "M",
              "T",
              "N"
            ],
            "type": "string"
          },
          "nombre": {
            "type": "string",
            "maxLength": 20
          },
          "nombre_display": {
            "type": "string",
            "readOnly": true
          },
          "hora_inicio": {
            "type": "string"
          },
          "hora_fin": {
            "type": "string"
          },
          "activo": {
            "type": "boolean"
          },
          "lotes_count": {
            "type": "integer",
            "readOnly": true
          }
        },
        "required": [
          "codigo",
          "nombre",
          "hora_inicio",
          "hora_fin"
        ]
      },
      "Notificacion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "usuario": {
            "type": "integer"
          },
          "usuario_nombre": {
            "type": "string",
            "readOnly": true
          },
          "tipo": {
            "enum": [
              "INFO",
              "ADVERTENCIA",
              "ERROR",
              "URGENTE"
            ],
            "type": "string"
          },
          "tipo_display": {
            "type": "string",
            "readOnly": true
          },
          "titulo": {
            "type": "string",
            "maxLength": 200
          },
          "mensaje": {
            "type": "string"
          },
          "referencia_modelo": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "referencia_id": {
            "type": "integer",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "format": "int64",
            "nullable": true
          },
          "leida": {
            "type": "boolean"
          },
          "fecha_creacion": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "fecha_lectura": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "usuario",
          "tipo",
          "titulo",
          "mensaje"
        ]
      },
      "CreateSignature": {
        "type": "object",
        "properties": {
          "action": {
            "enum": [
              "APPROVE",
              "REVIEW",
              "RELEASE",
              "REJECT",
              "AUTHORIZE",
              "VERIFY"
            ],
            "type": "string"
          },
          "meaning": {
            "enum": [
              "APPROVED_BY",
              "REVIEWED_BY",
              "RELEASED_BY",
              "REJECTED_BY",
              "AUTHORIZED_BY",
              "VERIFIED_BY"
            ],
            "type": "string"
          },
          "content_type": {
            "type": "string",
            "maxLength": 100
          },
          "object_id": {
            "type": "integer"
          },
          "object_str": {
            "type": "string",
            "maxLength": 200
          },
          "reason": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "data_to_sign": {
            "type": "object"
          }
        },
        "required": [
          "action",
          "meaning",
          "content_type",
          "object_id",
          "object_str",
          "reason",
          "password",
          "data_to_sign"
        ]
      },
      "CrearUsuario": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Obligatorio. Longitud máxima de 150 caracteres. Solo puede estar formado por letras, números y los caracteres @/./+/-/_.",
            "pattern": "^[\\w.@+-]+\\z",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 4
          },
          "password_confirmacion": {
            "type": "string",
            "writeOnly": true
          },
          "is_staff": {
            "type": "boolean",
            "description": "Indica si el usuario puede ingresar a este sitio de administración."
          },
          "is_superuser": {
            "type": "boolean",
            "description": "Indica que este usuario posee todos los permisos sin que sea necesario asignarle los mismos en forma explícita."
          },
          "legajo": {
            "type": "string"
          },
          "area": {
            "type": "string"
          },
          "turno_habitual": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "fecha_ingreso": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "required": [
          "username",
          "password",
          "password_confirmacion"
        ]
      },
      "CambiarPassword": {
        "type": "object",
        "properties": {
          "password_actual": {
            "type": "string",
            "writeOnly": true
          },
          "password_nueva": {
            "type": "string",
            "writeOnly": true,
            "minLength": 4
          },
          "password_confirmacion": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "password_nueva",
          "password_confirmacion"
        ]
      },
      "TokenObtainPair": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "writeOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "TokenRefresh": {
        "type": "object",
        "properties": {
          "refresh": {
            "type": "string"
          },
          "access": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "refresh"
        ]
      },
      "UsuarioPerfil": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Obligatorio. Longitud máxima de 150 caracteres. Solo puede estar formado por letras, números y los caracteres @/./+/-/_.",
            "pattern": "^[\\w.@+-]+\\z",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "full_name": {
            "type": "string",
            "readOnly": true
          },
          "profile": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "usuario": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "username": {
                    "type": "string",
                    "description": "Obligatorio. Longitud máxima de 150 caracteres. Solo puede estar formado por letras, números y los caracteres @/./+/-/_.",
                    "pattern": "^[\\w.@+-]+\\z",
                    "maxLength": 150
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                  },
                  "first_name": {
                    "type": "string",
                    "maxLength": 150
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 150
                  },
                  "full_name": {
                    "type": "string",
                    "readOnly": true
                  },
                  "is_staff": {
                    "type": "boolean",
                    "description": "Indica si el usuario puede ingresar a este sitio de administración."
                  },
                  "is_superuser": {
                    "type": "boolean",
                    "description": "Indica que este usuario posee todos los permisos sin que sea necesario asignarle los mismos en forma explícita."
                  }
                },
                "required": [
                  "username"
                ],
                "readOnly": true
              },
              "legajo": {
                "type": "string",
                "nullable": true,
                "maxLength": 20
              },
              "area": {
                "enum": [
                  "PRODUCCION",
                  "MANTENIMIENTO",
                  "ALMACEN",
                  "CALIDAD",
                  "ADMINISTRACION"
                ],
                "type": "string",
                "nullable": true
              },
              "area_display": {
                "type": "string",
                "readOnly": true
              },
              "turno_habitual": {
                "enum": [
                  "M",
                  "T",
                  "N",
                  "R"
                ],
                "type": "string",
                "nullable": true
              },
              "turno_display": {
                "type": "string",
                "readOnly": true
              },
              "telefono": {
                "type": "string",
                "maxLength": 20
              },
              "fecha_ingreso": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "activo": {
                "type": "boolean"
              }
            },
            "readOnly": true
          },
          "legajo": {
            "type": "string"
          },
          "area": {
            "type": "string"
          },
          "turno_habitual": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      }
    }
  }
}