# Generated by Django 5.2.7 on 2025-10-05 05:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaInsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Categoría de Insumo',
                'verbose_name_plural': 'Categorías de Insumos',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='EtapaProduccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('orden_tipico', models.IntegerField(help_text='Orden típico en el proceso')),
                ('requiere_registro_parametros', models.BooleanField(default=False)),
                ('parametros_esperados', models.JSONField(default=list, help_text='Lista de parámetros: [{nombre, unidad, min, max}]')),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Etapa de Producción',
                'verbose_name_plural': 'Etapas de Producción',
                'ordering': ['orden_tipico'],
            },
        ),
        migrations.CreateModel(
            name='Maquina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('COMPRESION', 'Compresión'), ('MEZCLADO', 'Mezclado'), ('GRANULACION', 'Granulación'), ('EMBLISTADO', 'Emblistado'), ('SERVICIOS', 'Servicios')], max_length=20)),
                ('fabricante', models.CharField(blank=True, max_length=100)),
                ('modelo', models.CharField(blank=True, max_length=100)),
                ('numero_serie', models.CharField(blank=True, max_length=100, verbose_name='Número de Serie')),
                ('año_fabricacion', models.IntegerField(blank=True, null=True, verbose_name='Año de Fabricación')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('capacidad_nominal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('unidad_capacidad', models.CharField(blank=True, help_text='ej: comprimidos/hora, kg/batch', max_length=20)),
                ('activa', models.BooleanField(default=True)),
                ('requiere_calificacion', models.BooleanField(default=False, verbose_name='Requiere Calificación')),
                ('fecha_instalacion', models.DateField(blank=True, null=True, verbose_name='Fecha de Instalación')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='maquinas/')),
                ('documentos', models.JSONField(default=list, help_text='Lista de documentos: [{nombre, url}]')),
            ],
            options={
                'verbose_name': 'Máquina',
                'verbose_name_plural': 'Máquinas',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=200)),
                ('forma_farmaceutica', models.CharField(choices=[('COMPRIMIDO', 'Comprimido'), ('CREMA', 'Crema'), ('SOLUCION', 'Solución')], max_length=20, verbose_name='Forma Farmacéutica')),
                ('principio_activo', models.CharField(max_length=200)),
                ('concentracion', models.CharField(max_length=50)),
                ('unidad_medida', models.CharField(help_text='comprimidos, gramos, ml', max_length=20)),
                ('lote_minimo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('lote_optimo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('tiempo_vida_util_meses', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('requiere_cadena_frio', models.BooleanField(default=False)),
                ('registro_anmat', models.CharField(blank=True, max_length=50)),
                ('activo', models.BooleanField(default=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='productos/')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('permisos', models.JSONField(default=dict, help_text='Estructura: {modulo: [acciones]}')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tipo de Documento',
                'verbose_name_plural': 'Tipos de Documentos',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='TipoIncidente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('requiere_investigacion', models.BooleanField(default=False)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tipo de Incidente',
                'verbose_name_plural': 'Tipos de Incidentes',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='TipoMantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tipo de Mantenimiento',
                'verbose_name_plural': 'Tipos de Mantenimiento',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(choices=[('M', 'Mañana'), ('T', 'Tarde'), ('N', 'Noche')], max_length=1, unique=True)),
                ('nombre', models.CharField(max_length=20)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Turno',
                'verbose_name_plural': 'Turnos',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Ubicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('PRODUCCION', 'Producción'), ('ALMACEN', 'Almacén'), ('MANTENIMIENTO', 'Mantenimiento'), ('SERVICIOS', 'Servicios')], max_length=20)),
                ('descripcion', models.TextField(blank=True)),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Ubicación',
                'verbose_name_plural': 'Ubicaciones',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='AlertaInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_item', models.CharField(choices=[('INSUMO', 'Insumo'), ('REPUESTO', 'Repuesto')], max_length=20)),
                ('item_id', models.IntegerField()),
                ('tipo_alerta', models.CharField(choices=[('STOCK_MINIMO', 'Stock Mínimo'), ('PUNTO_REORDEN', 'Punto de Reorden'), ('VENCIMIENTO_PROXIMO', 'Vencimiento Próximo'), ('VENCIDO', 'Vencido')], max_length=20)),
                ('nivel_urgencia', models.CharField(choices=[('BAJA', 'Baja'), ('MEDIA', 'Media'), ('ALTA', 'Alta'), ('CRITICA', 'Crítica')], max_length=10)),
                ('mensaje', models.TextField()),
                ('fecha_generacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_vencimiento_item', models.DateField(blank=True, null=True)),
                ('dias_para_vencimiento', models.IntegerField(blank=True, null=True)),
                ('stock_actual', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('estado', models.CharField(choices=[('ACTIVA', 'Activa'), ('ATENDIDA', 'Atendida'), ('IGNORADA', 'Ignorada')], default='ACTIVA', max_length=10)),
                ('fecha_atencion', models.DateTimeField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('atendida_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alertas_atendidas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alerta de Inventario',
                'verbose_name_plural': 'Alertas de Inventario',
                'ordering': ['-fecha_generacion', 'nivel_urgencia'],
            },
        ),
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(help_text='ej: v1.0, v2.1', max_length=20)),
                ('fecha_vigencia_desde', models.DateField()),
                ('fecha_vigencia_hasta', models.DateField(blank=True, null=True)),
                ('rendimiento_teorico', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tiempo_estimado_horas', models.DecimalField(decimal_places=2, max_digits=5)),
                ('fecha_aprobacion', models.DateField()),
                ('observaciones', models.TextField(blank=True)),
                ('activa', models.BooleanField(default=True)),
                ('aprobada_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='formulas_aprobadas', to=settings.AUTH_USER_MODEL)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formulas', to='core.producto')),
            ],
            options={
                'verbose_name': 'Fórmula',
                'verbose_name_plural': 'Fórmulas',
                'ordering': ['-fecha_vigencia_desde'],
                'unique_together': {('producto', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Incidente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30, unique=True, verbose_name='Código')),
                ('severidad', models.CharField(choices=[('MENOR', 'Menor'), ('MODERADA', 'Moderada'), ('MAYOR', 'Mayor'), ('CRITICA', 'Crítica')], max_length=10)),
                ('estado', models.CharField(choices=[('ABIERTO', 'Abierto'), ('EN_INVESTIGACION', 'En Investigación'), ('ACCION_CORRECTIVA', 'Acción Correctiva'), ('CERRADO', 'Cerrado')], default='ABIERTO', max_length=20)),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha_ocurrencia', models.DateTimeField()),
                ('fecha_reporte', models.DateTimeField(auto_now_add=True)),
                ('impacto_produccion', models.TextField(blank=True)),
                ('impacto_calidad', models.TextField(blank=True)),
                ('impacto_seguridad', models.TextField(blank=True)),
                ('requiere_notificacion_anmat', models.BooleanField(default=False)),
                ('fecha_cierre', models.DateTimeField(blank=True, null=True)),
                ('asignado_a', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidentes_asignados', to=settings.AUTH_USER_MODEL)),
                ('cerrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidentes_cerrados', to=settings.AUTH_USER_MODEL)),
                ('reportado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='incidentes_reportados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Incidente',
                'verbose_name_plural': 'Incidentes',
                'ordering': ['-fecha_ocurrencia'],
            },
        ),
        migrations.CreateModel(
            name='AccionCorrectiva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('CORRECTIVA', 'Correctiva'), ('PREVENTIVA', 'Preventiva')], max_length=15)),
                ('descripcion', models.TextField()),
                ('fecha_planificada', models.DateField()),
                ('fecha_implementacion', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('PLANIFICADA', 'Planificada'), ('EN_PROCESO', 'En Proceso'), ('COMPLETADA', 'Completada'), ('CANCELADA', 'Cancelada')], default='PLANIFICADA', max_length=15)),
                ('eficacia_verificada', models.BooleanField(default=False)),
                ('fecha_verificacion', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='acciones_responsable', to=settings.AUTH_USER_MODEL)),
                ('verificado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acciones_verificadas', to=settings.AUTH_USER_MODEL)),
                ('incidente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acciones_correctivas', to='core.incidente')),
            ],
            options={
                'verbose_name': 'Acción Correctiva',
                'verbose_name_plural': 'Acciones Correctivas',
                'ordering': ['-fecha_planificada'],
            },
        ),
        migrations.CreateModel(
            name='Insumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=200)),
                ('unidad_medida', models.CharField(help_text='kg, L, unidades', max_length=20)),
                ('stock_minimo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_maximo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('punto_reorden', models.DecimalField(decimal_places=2, max_digits=10)),
                ('requiere_cadena_frio', models.BooleanField(default=False)),
                ('requiere_control_lote', models.BooleanField(default=True)),
                ('tiempo_vida_util_meses', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('proveedor_principal', models.CharField(blank=True, max_length=200)),
                ('codigo_proveedor', models.CharField(blank=True, max_length=50, verbose_name='Código del Proveedor')),
                ('precio_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('ficha_tecnica_url', models.CharField(blank=True, max_length=500)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='insumos', to='core.categoriainsumo')),
            ],
            options={
                'verbose_name': 'Insumo',
                'verbose_name_plural': 'Insumos',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='InvestigacionIncidente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metodologia', models.CharField(choices=[('5_PORQUES', '5 Porqués'), ('ISHIKAWA', 'Diagrama de Ishikawa'), ('FMEA', 'FMEA'), ('OTRO', 'Otro')], max_length=20)),
                ('causa_raiz', models.TextField()),
                ('analisis_detallado', models.TextField()),
                ('diagrama_url', models.CharField(blank=True, max_length=500)),
                ('fecha_investigacion', models.DateTimeField(auto_now_add=True)),
                ('incidente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='investigacion', to='core.incidente')),
                ('investigado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='investigaciones_realizadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Investigación de Incidente',
                'verbose_name_plural': 'Investigaciones de Incidentes',
            },
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_lote', models.CharField(max_length=50, unique=True, verbose_name='Código de Lote')),
                ('cantidad_planificada', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('cantidad_producida', models.IntegerField(default=0)),
                ('cantidad_rechazada', models.IntegerField(default=0)),
                ('unidad', models.CharField(max_length=20)),
                ('estado', models.CharField(choices=[('PLANIFICADO', 'Planificado'), ('EN_PROCESO', 'En Proceso'), ('PAUSADO', 'Pausado'), ('FINALIZADO', 'Finalizado'), ('RECHAZADO', 'Rechazado'), ('LIBERADO', 'Liberado')], default='PLANIFICADO', max_length=20)),
                ('prioridad', models.CharField(choices=[('BAJA', 'Baja'), ('NORMAL', 'Normal'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='NORMAL', max_length=10)),
                ('fecha_planificada_inicio', models.DateTimeField()),
                ('fecha_real_inicio', models.DateTimeField(blank=True, null=True)),
                ('fecha_planificada_fin', models.DateTimeField()),
                ('fecha_real_fin', models.DateTimeField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes_creados', to=settings.AUTH_USER_MODEL)),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes', to='core.formula')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes_supervisados', to=settings.AUTH_USER_MODEL)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes', to='core.producto')),
                ('turno', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes', to='core.turno')),
            ],
            options={
                'verbose_name': 'Lote de Producción',
                'verbose_name_plural': 'Lotes de Producción',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.AddField(
            model_name='incidente',
            name='lote_afectado',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidentes', to='core.lote'),
        ),
        migrations.CreateModel(
            name='LoteEtapa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.IntegerField()),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('EN_PROCESO', 'En Proceso'), ('PAUSADO', 'Pausado'), ('COMPLETADO', 'Completado'), ('RECHAZADO', 'Rechazado')], default='PENDIENTE', max_length=20)),
                ('fecha_inicio', models.DateTimeField(blank=True, null=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('duracion_minutos', models.IntegerField(blank=True, editable=False, null=True)),
                ('cantidad_entrada', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cantidad_salida', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cantidad_merma', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('porcentaje_rendimiento', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=5, null=True)),
                ('parametros_registrados', models.JSONField(default=list, help_text='Lista de parámetros: [{nombre, valor, unidad, conforme}]')),
                ('observaciones', models.TextField(blank=True)),
                ('requiere_aprobacion_calidad', models.BooleanField(default=False)),
                ('fecha_aprobacion_calidad', models.DateTimeField(blank=True, null=True)),
                ('aprobada_por_calidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='etapas_aprobadas', to=settings.AUTH_USER_MODEL)),
                ('etapa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.etapaproduccion')),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etapas', to='core.lote')),
                ('operario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='etapas_operadas', to=settings.AUTH_USER_MODEL)),
                ('maquina', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='etapas_ejecutadas', to='core.maquina')),
            ],
            options={
                'verbose_name': 'Etapa de Lote',
                'verbose_name_plural': 'Etapas de Lotes',
                'ordering': ['lote', 'orden'],
                'unique_together': {('lote', 'orden')},
            },
        ),
        migrations.CreateModel(
            name='ControlCalidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_control', models.CharField(help_text='ej: Peso promedio, Dureza, Friabilidad', max_length=100)),
                ('valor_medido', models.DecimalField(decimal_places=4, max_digits=10)),
                ('unidad', models.CharField(max_length=20)),
                ('valor_minimo', models.DecimalField(decimal_places=4, max_digits=10)),
                ('valor_maximo', models.DecimalField(decimal_places=4, max_digits=10)),
                ('conforme', models.BooleanField(editable=False)),
                ('fecha_control', models.DateTimeField(auto_now_add=True)),
                ('observaciones', models.TextField(blank=True)),
                ('controlado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='controles_realizados', to=settings.AUTH_USER_MODEL)),
                ('lote_etapa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controles_calidad', to='core.loteetapa')),
            ],
            options={
                'verbose_name': 'Control de Calidad',
                'verbose_name_plural': 'Controles de Calidad',
                'ordering': ['-fecha_control'],
            },
        ),
        migrations.CreateModel(
            name='LoteInsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_lote_proveedor', models.CharField(max_length=50)),
                ('fecha_recepcion', models.DateField()),
                ('fecha_fabricacion', models.DateField(blank=True, null=True)),
                ('fecha_vencimiento', models.DateField()),
                ('cantidad_inicial', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cantidad_actual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unidad', models.CharField(max_length=20)),
                ('ubicacion_detalle', models.CharField(blank=True, help_text='ej: Estante A-3', max_length=100)),
                ('proveedor', models.CharField(max_length=200)),
                ('numero_factura', models.CharField(blank=True, max_length=50)),
                ('precio_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('estado', models.CharField(choices=[('CUARENTENA', 'Cuarentena'), ('APROBADO', 'Aprobado'), ('RECHAZADO', 'Rechazado'), ('AGOTADO', 'Agotado')], default='CUARENTENA', max_length=20)),
                ('certificado_analisis_url', models.CharField(blank=True, max_length=500)),
                ('fecha_aprobacion', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('aprobado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lotes_insumo_aprobados', to=settings.AUTH_USER_MODEL)),
                ('insumo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes_insumo', to='core.insumo')),
                ('ubicacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lotes_insumo', to='core.ubicacion')),
            ],
            options={
                'verbose_name': 'Lote de Insumo',
                'verbose_name_plural': 'Lotes de Insumos',
                'ordering': ['fecha_vencimiento', 'fecha_recepcion'],
            },
        ),
        migrations.CreateModel(
            name='LoteInsumoConsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_planificada', models.DecimalField(decimal_places=4, max_digits=10)),
                ('cantidad_real', models.DecimalField(decimal_places=4, max_digits=10)),
                ('unidad', models.CharField(max_length=20)),
                ('fecha_consumo', models.DateTimeField(auto_now_add=True)),
                ('insumo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.insumo')),
                ('lote_etapa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consumos_insumo', to='core.loteetapa')),
                ('lote_insumo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='consumos', to='core.loteinsumo')),
                ('lote_produccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumos_insumo', to='core.lote')),
                ('registrado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='consumos_registrados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consumo de Insumo',
                'verbose_name_plural': 'Consumos de Insumos',
                'ordering': ['-fecha_consumo'],
            },
        ),
        migrations.AddField(
            model_name='incidente',
            name='maquina',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidentes', to='core.maquina'),
        ),
        migrations.CreateModel(
            name='Parada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('PLANIFICADA', 'Planificada'), ('NO_PLANIFICADA', 'No Planificada')], max_length=20)),
                ('categoria', models.CharField(choices=[('FALLA_EQUIPO', 'Falla de Equipo'), ('FALTA_INSUMO', 'Falta de Insumo'), ('CAMBIO_FORMATO', 'Cambio de Formato'), ('LIMPIEZA', 'Limpieza'), ('CALIDAD', 'Problema de Calidad'), ('OTROS', 'Otros')], max_length=20)),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('duracion_minutos', models.IntegerField(blank=True, editable=False, null=True)),
                ('descripcion', models.TextField()),
                ('solucion', models.TextField(blank=True)),
                ('lote_etapa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paradas', to='core.loteetapa')),
                ('registrado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paradas_registradas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parada',
                'verbose_name_plural': 'Paradas',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='PlanMantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('frecuencia_dias', models.IntegerField(blank=True, help_text='Frecuencia en días', null=True)),
                ('frecuencia_horas_uso', models.IntegerField(blank=True, help_text='Frecuencia en horas de uso', null=True)),
                ('frecuencia_ciclos', models.IntegerField(blank=True, help_text='Frecuencia en ciclos de operación', null=True)),
                ('tareas', models.JSONField(default=list, help_text='Lista de tareas: [{nombre, descripcion, duracion_min}]')),
                ('repuestos_necesarios', models.JSONField(default=list, help_text='Lista de repuestos: [{repuesto_id, cantidad}]')),
                ('duracion_estimada_horas', models.DecimalField(decimal_places=2, max_digits=5)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='planes_creados', to=settings.AUTH_USER_MODEL)),
                ('maquina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planes_mantenimiento', to='core.maquina')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tipomantenimiento')),
            ],
            options={
                'verbose_name': 'Plan de Mantenimiento',
                'verbose_name_plural': 'Planes de Mantenimiento',
                'ordering': ['maquina', 'codigo'],
            },
        ),
        migrations.CreateModel(
            name='OrdenTrabajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30, unique=True, verbose_name='Código')),
                ('prioridad', models.CharField(choices=[('BAJA', 'Baja'), ('NORMAL', 'Normal'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='NORMAL', max_length=10)),
                ('estado', models.CharField(choices=[('ABIERTA', 'Abierta'), ('ASIGNADA', 'Asignada'), ('EN_PROCESO', 'En Proceso'), ('PAUSADA', 'Pausada'), ('COMPLETADA', 'Completada'), ('CANCELADA', 'Cancelada')], default='ABIERTA', max_length=20)),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_planificada', models.DateTimeField(blank=True, null=True)),
                ('fecha_inicio', models.DateTimeField(blank=True, null=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('duracion_real_horas', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=6, null=True)),
                ('trabajo_realizado', models.TextField(blank=True)),
                ('observaciones', models.TextField(blank=True)),
                ('requiere_parada_produccion', models.BooleanField(default=False)),
                ('costo_estimado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('costo_real', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('asignada_a', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordenes_asignadas', to=settings.AUTH_USER_MODEL)),
                ('completada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordenes_completadas', to=settings.AUTH_USER_MODEL)),
                ('creada_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ordenes_creadas', to=settings.AUTH_USER_MODEL)),
                ('maquina', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ordenes_trabajo', to='core.maquina')),
                ('plan_mantenimiento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordenes_generadas', to='core.planmantenimiento')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tipomantenimiento')),
            ],
            options={
                'verbose_name': 'Orden de Trabajo',
                'verbose_name_plural': 'Órdenes de Trabajo',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Repuesto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30, unique=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=200)),
                ('categoria', models.CharField(choices=[('MECANICO', 'Mecánico'), ('ELECTRICO', 'Eléctrico'), ('NEUMATICO', 'Neumático'), ('ELECTRONICO', 'Electrónico'), ('CONSUMIBLE', 'Consumible'), ('OTRO', 'Otro')], max_length=20)),
                ('stock_minimo', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('stock_actual', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('punto_reorden', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('ubicacion_detalle', models.CharField(blank=True, max_length=100)),
                ('proveedor_principal', models.CharField(blank=True, max_length=200)),
                ('codigo_proveedor', models.CharField(blank=True, max_length=50, verbose_name='Código del Proveedor')),
                ('precio_unitario', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tiempo_reposicion_dias', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('critico', models.BooleanField(default=False, help_text='Repuesto crítico para operación')),
                ('activo', models.BooleanField(default=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='repuestos/')),
                ('maquinas_compatibles', models.ManyToManyField(blank=True, related_name='repuestos', to='core.maquina')),
                ('ubicacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='repuestos', to='core.ubicacion')),
            ],
            options={
                'verbose_name': 'Repuesto',
                'verbose_name_plural': 'Repuestos',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='OrdenTrabajoRepuesto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_planificada', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('cantidad_real', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('fecha_uso', models.DateTimeField(blank=True, null=True)),
                ('orden_trabajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repuestos_utilizados', to='core.ordentrabajo')),
                ('repuesto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.repuesto')),
            ],
            options={
                'verbose_name': 'Repuesto de Orden de Trabajo',
                'verbose_name_plural': 'Repuestos de Órdenes de Trabajo',
            },
        ),
        migrations.CreateModel(
            name='LoteDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('archivo_url', models.CharField(max_length=500)),
                ('hash_sha256', models.CharField(editable=False, max_length=64)),
                ('tamaño_bytes', models.BigIntegerField(editable=False)),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='core.lote')),
                ('subido_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documentos_subidos', to=settings.AUTH_USER_MODEL)),
                ('tipo_documento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tipodocumento')),
            ],
            options={
                'verbose_name': 'Documento de Lote',
                'verbose_name_plural': 'Documentos de Lotes',
                'ordering': ['-fecha_subida'],
            },
        ),
        migrations.AddField(
            model_name='incidente',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tipoincidente'),
        ),
        migrations.CreateModel(
            name='HistorialMantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField()),
                ('descripcion', models.TextField()),
                ('tiempo_parada_horas', models.DecimalField(decimal_places=2, max_digits=6)),
                ('costo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('realizado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mantenimientos_realizados', to=settings.AUTH_USER_MODEL)),
                ('maquina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_mantenimiento', to='core.maquina')),
                ('orden_trabajo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial', to='core.ordentrabajo')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tipomantenimiento')),
            ],
            options={
                'verbose_name': 'Historial de Mantenimiento',
                'verbose_name_plural': 'Historiales de Mantenimiento',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='ProductoTerminado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unidad', models.CharField(max_length=20)),
                ('fecha_fabricacion', models.DateField()),
                ('fecha_vencimiento', models.DateField()),
                ('ubicacion_detalle', models.CharField(blank=True, max_length=100)),
                ('estado', models.CharField(choices=[('CUARENTENA', 'Cuarentena'), ('LIBERADO', 'Liberado'), ('RETENIDO', 'Retenido'), ('VENCIDO', 'Vencido')], default='CUARENTENA', max_length=20)),
                ('fecha_liberacion', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('liberado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productos_liberados', to=settings.AUTH_USER_MODEL)),
                ('lote', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='producto_terminado', to='core.lote')),
                ('ubicacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productos_terminados', to='core.ubicacion')),
            ],
            options={
                'verbose_name': 'Producto Terminado',
                'verbose_name_plural': 'Productos Terminados',
                'ordering': ['fecha_vencimiento'],
            },
        ),
        migrations.CreateModel(
            name='MovimientoInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_item', models.CharField(choices=[('INSUMO', 'Insumo'), ('REPUESTO', 'Repuesto'), ('PRODUCTO_TERMINADO', 'Producto Terminado')], max_length=20)),
                ('item_id', models.IntegerField(help_text='ID del Insumo, Repuesto o Producto')),
                ('lote_item_id', models.IntegerField(blank=True, help_text='ID del LoteInsumo o ProductoTerminado', null=True)),
                ('tipo_movimiento', models.CharField(choices=[('ENTRADA', 'Entrada'), ('SALIDA', 'Salida'), ('AJUSTE', 'Ajuste'), ('TRANSFERENCIA', 'Transferencia')], max_length=20)),
                ('motivo', models.CharField(choices=[('COMPRA', 'Compra'), ('PRODUCCION', 'Producción'), ('MANTENIMIENTO', 'Mantenimiento'), ('AJUSTE_INVENTARIO', 'Ajuste de Inventario'), ('VENCIMIENTO', 'Vencimiento'), ('DEVOLUCION', 'Devolución')], max_length=20)),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unidad', models.CharField(max_length=20)),
                ('referencia_documento', models.CharField(blank=True, help_text='OC-123, LOTE-2025-001, WO-456', max_length=100)),
                ('fecha_movimiento', models.DateTimeField(auto_now_add=True)),
                ('observaciones', models.TextField(blank=True)),
                ('registrado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movimientos_registrados', to=settings.AUTH_USER_MODEL)),
                ('ubicacion_destino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='movimientos_destino', to='core.ubicacion')),
                ('ubicacion_origen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='movimientos_origen', to='core.ubicacion')),
            ],
            options={
                'verbose_name': 'Movimiento de Inventario',
                'verbose_name_plural': 'Movimientos de Inventario',
                'ordering': ['-fecha_movimiento'],
            },
        ),
        migrations.AddField(
            model_name='maquina',
            name='ubicacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='maquinas', to='core.ubicacion'),
        ),
        migrations.AddField(
            model_name='incidente',
            name='ubicacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='incidentes', to='core.ubicacion'),
        ),
        migrations.CreateModel(
            name='ConteoFisico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30, unique=True, verbose_name='Código')),
                ('tipo', models.CharField(choices=[('TOTAL', 'Total'), ('PARCIAL', 'Parcial'), ('CICLICO', 'Cíclico')], max_length=10)),
                ('fecha_planificada', models.DateField()),
                ('fecha_inicio', models.DateTimeField(blank=True, null=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('PLANIFICADO', 'Planificado'), ('EN_PROCESO', 'En Proceso'), ('COMPLETADO', 'Completado'), ('CANCELADO', 'Cancelado')], default='PLANIFICADO', max_length=20)),
                ('observaciones', models.TextField(blank=True)),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conteos_responsable', to=settings.AUTH_USER_MODEL)),
                ('ubicacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='conteos_fisicos', to='core.ubicacion')),
            ],
            options={
                'verbose_name': 'Conteo Físico',
                'verbose_name_plural': 'Conteos Físicos',
                'ordering': ['-fecha_planificada'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legajo', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Legajo')),
                ('area', models.CharField(blank=True, choices=[('PRODUCCION', 'Producción'), ('MANTENIMIENTO', 'Mantenimiento'), ('ALMACEN', 'Almacén'), ('CALIDAD', 'Calidad'), ('ADMINISTRACION', 'Administración')], max_length=20, null=True)),
                ('turno_habitual', models.CharField(blank=True, choices=[('M', 'Mañana'), ('T', 'Tarde'), ('N', 'Noche'), ('R', 'Rotativo')], max_length=1, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('fecha_ingreso', models.DateField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='perfiles/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuarios',
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='FormulaInsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.DecimalField(decimal_places=4, max_digits=10)),
                ('unidad', models.CharField(max_length=20)),
                ('es_critico', models.BooleanField(default=False, help_text='Insumo crítico para la calidad')),
                ('orden', models.IntegerField(help_text='Orden de adición en el proceso')),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insumos', to='core.formula')),
                ('insumo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.insumo')),
            ],
            options={
                'verbose_name': 'Insumo de Fórmula',
                'verbose_name_plural': 'Insumos de Fórmulas',
                'ordering': ['formula', 'orden'],
                'unique_together': {('formula', 'insumo')},
            },
        ),
        migrations.CreateModel(
            name='LogAuditoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(choices=[('CREAR', 'Crear'), ('MODIFICAR', 'Modificar'), ('ELIMINAR', 'Eliminar'), ('VER', 'Ver'), ('EXPORTAR', 'Exportar')], max_length=10)),
                ('modelo', models.CharField(help_text='Nombre del modelo afectado', max_length=100)),
                ('objeto_id', models.IntegerField()),
                ('objeto_str', models.CharField(max_length=200)),
                ('cambios', models.JSONField(default=dict, help_text='Estructura: {campo: {antes: X, despues: Y}}')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acciones_auditoria', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Auditoría',
                'verbose_name_plural': 'Logs de Auditoría',
                'ordering': ['-fecha'],
                'indexes': [models.Index(fields=['usuario', '-fecha'], name='core_logaud_usuario_778fba_idx'), models.Index(fields=['modelo', 'objeto_id'], name='core_logaud_modelo_df8aac_idx')],
            },
        ),
        migrations.CreateModel(
            name='IndicadorMantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(choices=[('SEMANAL', 'Semanal'), ('MENSUAL', 'Mensual'), ('ANUAL', 'Anual')], max_length=10)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('mtbf_horas', models.DecimalField(decimal_places=2, help_text='Mean Time Between Failures', max_digits=10)),
                ('mttr_horas', models.DecimalField(decimal_places=2, help_text='Mean Time To Repair', max_digits=10)),
                ('disponibilidad_porcentaje', models.DecimalField(decimal_places=2, max_digits=5)),
                ('numero_fallas', models.IntegerField()),
                ('numero_mantenimientos_preventivos', models.IntegerField()),
                ('numero_mantenimientos_correctivos', models.IntegerField()),
                ('costo_total_mantenimiento', models.DecimalField(decimal_places=2, max_digits=12)),
                ('fecha_calculo', models.DateTimeField(auto_now_add=True)),
                ('maquina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicadores_mantenimiento', to='core.maquina')),
            ],
            options={
                'verbose_name': 'Indicador de Mantenimiento',
                'verbose_name_plural': 'Indicadores de Mantenimiento',
                'ordering': ['-fecha_inicio'],
                'unique_together': {('maquina', 'periodo', 'fecha_inicio')},
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('INFO', 'Información'), ('ADVERTENCIA', 'Advertencia'), ('ERROR', 'Error'), ('URGENTE', 'Urgente')], max_length=15)),
                ('titulo', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('referencia_modelo', models.CharField(blank=True, max_length=100, null=True)),
                ('referencia_id', models.IntegerField(blank=True, null=True)),
                ('leida', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_lectura', models.DateTimeField(blank=True, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-fecha_creacion'],
                'indexes': [models.Index(fields=['usuario', 'leida', '-fecha_creacion'], name='core_notifi_usuario_a0fda1_idx')],
            },
        ),
        migrations.CreateModel(
            name='UsuarioRol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True)),
                ('asignado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='roles_que_asigno', to=settings.AUTH_USER_MODEL)),
                ('rol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuarios', to='core.rol')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles_asignados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Asignación de Rol',
                'verbose_name_plural': 'Asignaciones de Roles',
                'unique_together': {('usuario', 'rol')},
            },
        ),
    ]
