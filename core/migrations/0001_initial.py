# Generated by Django 5.2.7 on 2025-10-15 02:58

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EtapaProduccion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                ("nombre", models.CharField(max_length=100)),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "orden_tipico",
                    models.IntegerField(help_text="Orden típico en el proceso"),
                ),
                ("requiere_registro_parametros", models.BooleanField(default=False)),
                (
                    "parametros_esperados",
                    models.JSONField(
                        default=list,
                        help_text="Lista de parámetros: [{nombre, unidad, min, max}]",
                    ),
                ),
                ("activa", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Etapa de Producción",
                "verbose_name_plural": "Etapas de Producción",
                "ordering": ["orden_tipico"],
            },
        ),
        migrations.CreateModel(
            name="Maquina",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                ("nombre", models.CharField(max_length=100)),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("COMPRESION", "Compresión"),
                            ("MEZCLADO", "Mezclado"),
                            ("GRANULACION", "Granulación"),
                            ("EMBLISTADO", "Emblistado"),
                            ("SERVICIOS", "Servicios"),
                        ],
                        max_length=20,
                    ),
                ),
                ("fabricante", models.CharField(blank=True, max_length=100)),
                ("modelo", models.CharField(blank=True, max_length=100)),
                (
                    "numero_serie",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Número de Serie"
                    ),
                ),
                (
                    "año_fabricacion",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Año de Fabricación"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "capacidad_nominal",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "unidad_capacidad",
                    models.CharField(
                        blank=True,
                        help_text="ej: comprimidos/hora, kg/batch",
                        max_length=20,
                    ),
                ),
                ("activa", models.BooleanField(default=True)),
                (
                    "requiere_calificacion",
                    models.BooleanField(
                        default=False, verbose_name="Requiere Calificación"
                    ),
                ),
                (
                    "fecha_instalacion",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Instalación"
                    ),
                ),
                (
                    "imagen",
                    models.ImageField(blank=True, null=True, upload_to="maquinas/"),
                ),
                (
                    "documentos",
                    models.JSONField(
                        default=list, help_text="Lista de documentos: [{nombre, url}]"
                    ),
                ),
            ],
            options={
                "verbose_name": "Máquina",
                "verbose_name_plural": "Máquinas",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="Producto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                ("nombre", models.CharField(max_length=200)),
                (
                    "forma_farmaceutica",
                    models.CharField(
                        choices=[
                            ("COMPRIMIDO", "Comprimido"),
                            ("CREMA", "Crema"),
                            ("SOLUCION", "Solución"),
                        ],
                        max_length=20,
                        verbose_name="Forma Farmacéutica",
                    ),
                ),
                ("principio_activo", models.CharField(max_length=200)),
                ("concentracion", models.CharField(max_length=50)),
                (
                    "unidad_medida",
                    models.CharField(
                        help_text="comprimidos, gramos, ml", max_length=20
                    ),
                ),
                (
                    "lote_minimo",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "lote_optimo",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "tiempo_vida_util_meses",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("requiere_cadena_frio", models.BooleanField(default=False)),
                ("registro_anmat", models.CharField(blank=True, max_length=50)),
                ("activo", models.BooleanField(default=True)),
                (
                    "imagen",
                    models.ImageField(blank=True, null=True, upload_to="productos/"),
                ),
            ],
            options={
                "verbose_name": "Producto",
                "verbose_name_plural": "Productos",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="TipoDocumento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=10, unique=True, verbose_name="Código"),
                ),
                ("nombre", models.CharField(max_length=100)),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                ("activo", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Tipo de Documento",
                "verbose_name_plural": "Tipos de Documentos",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="TipoIncidente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                ("nombre", models.CharField(max_length=100)),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                ("requiere_investigacion", models.BooleanField(default=False)),
                ("activo", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Tipo de Incidente",
                "verbose_name_plural": "Tipos de Incidentes",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="TipoMantenimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=10, unique=True, verbose_name="Código"),
                ),
                ("nombre", models.CharField(max_length=50)),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                ("activo", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Tipo de Mantenimiento",
                "verbose_name_plural": "Tipos de Mantenimiento",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="Turno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        choices=[("M", "Mañana"), ("T", "Tarde"), ("N", "Noche")],
                        max_length=1,
                        unique=True,
                    ),
                ),
                ("nombre", models.CharField(max_length=20)),
                ("hora_inicio", models.TimeField()),
                ("hora_fin", models.TimeField()),
                ("activo", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Turno",
                "verbose_name_plural": "Turnos",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="Ubicacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=20, unique=True)),
                ("nombre", models.CharField(max_length=100)),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("PRODUCCION", "Producción"),
                            ("ALMACEN", "Almacén"),
                            ("MANTENIMIENTO", "Mantenimiento"),
                            ("SERVICIOS", "Servicios"),
                        ],
                        max_length=20,
                    ),
                ),
                ("descripcion", models.TextField(blank=True)),
                ("activa", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Ubicación",
                "verbose_name_plural": "Ubicaciones",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="Formula",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "version",
                    models.CharField(help_text="ej: v1.0, v2.1", max_length=20),
                ),
                ("fecha_vigencia_desde", models.DateField()),
                ("fecha_vigencia_hasta", models.DateField(blank=True, null=True)),
                (
                    "rendimiento_teorico",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "tiempo_estimado_horas",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("fecha_aprobacion", models.DateField()),
                ("observaciones", models.TextField(blank=True)),
                ("activa", models.BooleanField(default=True)),
                (
                    "aprobada_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="formulas_aprobadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="formulas",
                        to="core.producto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fórmula",
                "verbose_name_plural": "Fórmulas",
                "ordering": ["-fecha_vigencia_desde"],
                "unique_together": {("producto", "version")},
            },
        ),
        migrations.CreateModel(
            name="Incidente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=30, unique=True, verbose_name="Código"),
                ),
                (
                    "severidad",
                    models.CharField(
                        choices=[
                            ("MENOR", "Menor"),
                            ("MODERADA", "Moderada"),
                            ("MAYOR", "Mayor"),
                            ("CRITICA", "Crítica"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("ABIERTO", "Abierto"),
                            ("EN_INVESTIGACION", "En Investigación"),
                            ("ACCION_CORRECTIVA", "Acción Correctiva"),
                            ("CERRADO", "Cerrado"),
                        ],
                        default="ABIERTO",
                        max_length=20,
                    ),
                ),
                ("titulo", models.CharField(max_length=200)),
                ("descripcion", models.TextField()),
                ("fecha_ocurrencia", models.DateTimeField()),
                ("fecha_reporte", models.DateTimeField(auto_now_add=True)),
                ("impacto_produccion", models.TextField(blank=True)),
                ("impacto_calidad", models.TextField(blank=True)),
                ("impacto_seguridad", models.TextField(blank=True)),
                ("requiere_notificacion_anmat", models.BooleanField(default=False)),
                ("fecha_cierre", models.DateTimeField(blank=True, null=True)),
                (
                    "asignado_a",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="incidentes_asignados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cerrado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="incidentes_cerrados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reportado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="incidentes_reportados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Incidente",
                "verbose_name_plural": "Incidentes",
                "ordering": ["-fecha_ocurrencia"],
            },
        ),
        migrations.CreateModel(
            name="AccionCorrectiva",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("CORRECTIVA", "Correctiva"),
                            ("PREVENTIVA", "Preventiva"),
                        ],
                        max_length=15,
                    ),
                ),
                ("descripcion", models.TextField()),
                ("fecha_planificada", models.DateField()),
                ("fecha_implementacion", models.DateField(blank=True, null=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PLANIFICADA", "Planificada"),
                            ("EN_PROCESO", "En Proceso"),
                            ("COMPLETADA", "Completada"),
                            ("CANCELADA", "Cancelada"),
                        ],
                        default="PLANIFICADA",
                        max_length=15,
                    ),
                ),
                ("eficacia_verificada", models.BooleanField(default=False)),
                ("fecha_verificacion", models.DateField(blank=True, null=True)),
                ("observaciones", models.TextField(blank=True)),
                (
                    "responsable",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="acciones_responsable",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verificado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acciones_verificadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "incidente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="acciones_correctivas",
                        to="core.incidente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Acción Correctiva",
                "verbose_name_plural": "Acciones Correctivas",
                "ordering": ["-fecha_planificada"],
            },
        ),
        migrations.CreateModel(
            name="InvestigacionIncidente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metodologia",
                    models.CharField(
                        choices=[
                            ("5_PORQUES", "5 Porqués"),
                            ("ISHIKAWA", "Diagrama de Ishikawa"),
                            ("FMEA", "FMEA"),
                            ("OTRO", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                ("causa_raiz", models.TextField()),
                ("analisis_detallado", models.TextField()),
                ("diagrama_url", models.CharField(blank=True, max_length=500)),
                ("fecha_investigacion", models.DateTimeField(auto_now_add=True)),
                (
                    "incidente",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="investigacion",
                        to="core.incidente",
                    ),
                ),
                (
                    "investigado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="investigaciones_realizadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Investigación de Incidente",
                "verbose_name_plural": "Investigaciones de Incidentes",
            },
        ),
        migrations.CreateModel(
            name="Lote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo_lote",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Código de Lote"
                    ),
                ),
                (
                    "cantidad_planificada",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("cantidad_producida", models.IntegerField(default=0)),
                ("cantidad_rechazada", models.IntegerField(default=0)),
                ("unidad", models.CharField(max_length=20)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PLANIFICADO", "Planificado"),
                            ("EN_PROCESO", "En Proceso"),
                            ("PAUSADO", "Pausado"),
                            ("FINALIZADO", "Finalizado"),
                            ("CANCELADO", "Cancelado"),
                            ("RECHAZADO", "Rechazado"),
                            ("LIBERADO", "Liberado"),
                        ],
                        default="PLANIFICADO",
                        max_length=20,
                    ),
                ),
                (
                    "prioridad",
                    models.CharField(
                        choices=[
                            ("BAJA", "Baja"),
                            ("NORMAL", "Normal"),
                            ("ALTA", "Alta"),
                            ("URGENTE", "Urgente"),
                        ],
                        default="NORMAL",
                        max_length=10,
                    ),
                ),
                ("fecha_planificada_inicio", models.DateTimeField()),
                ("fecha_real_inicio", models.DateTimeField(blank=True, null=True)),
                ("fecha_planificada_fin", models.DateTimeField()),
                ("fecha_real_fin", models.DateTimeField(blank=True, null=True)),
                ("observaciones", models.TextField(blank=True)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_cancelacion", models.DateTimeField(blank=True, null=True)),
                (
                    "motivo_cancelacion",
                    models.TextField(blank=True, verbose_name="Motivo de cancelación"),
                ),
                (
                    "visible",
                    models.BooleanField(
                        default=True, verbose_name="Visible en listado"
                    ),
                ),
                (
                    "cancelado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lotes_cancelados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lotes_creados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "formula",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lotes",
                        to="core.formula",
                    ),
                ),
                (
                    "supervisor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lotes_supervisados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lotes",
                        to="core.producto",
                    ),
                ),
                (
                    "turno",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="lotes",
                        to="core.turno",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lote de Producción",
                "verbose_name_plural": "Lotes de Producción",
                "ordering": ["-fecha_creacion"],
            },
        ),
        migrations.AddField(
            model_name="incidente",
            name="lote_afectado",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="incidentes",
                to="core.lote",
            ),
        ),
        migrations.CreateModel(
            name="LoteEtapa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("orden", models.IntegerField()),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PENDIENTE", "Pendiente"),
                            ("EN_PROCESO", "En Proceso"),
                            ("PAUSADO", "Pausado"),
                            ("COMPLETADO", "Completado"),
                            ("RECHAZADO", "Rechazado"),
                        ],
                        default="PENDIENTE",
                        max_length=20,
                    ),
                ),
                ("fecha_inicio", models.DateTimeField(blank=True, null=True)),
                ("fecha_fin", models.DateTimeField(blank=True, null=True)),
                (
                    "duracion_minutos",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "cantidad_entrada",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cantidad_salida",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cantidad_merma",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "porcentaje_rendimiento",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        editable=False,
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "parametros_registrados",
                    models.JSONField(
                        default=list,
                        help_text="Lista de parámetros: [{nombre, valor, unidad, conforme}]",
                    ),
                ),
                ("observaciones", models.TextField(blank=True)),
                ("requiere_aprobacion_calidad", models.BooleanField(default=False)),
                (
                    "fecha_aprobacion_calidad",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "aprobada_por_calidad",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="etapas_aprobadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "etapa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.etapaproduccion",
                    ),
                ),
                (
                    "lote",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="etapas",
                        to="core.lote",
                    ),
                ),
                (
                    "operario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="etapas_operadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "maquina",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="etapas_ejecutadas",
                        to="core.maquina",
                    ),
                ),
            ],
            options={
                "verbose_name": "Etapa de Lote",
                "verbose_name_plural": "Etapas de Lotes",
                "ordering": ["lote", "orden"],
                "unique_together": {("lote", "orden")},
            },
        ),
        migrations.CreateModel(
            name="Desviacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=30, unique=True, verbose_name="Código"),
                ),
                ("titulo", models.CharField(max_length=200)),
                ("descripcion", models.TextField()),
                (
                    "severidad",
                    models.CharField(
                        choices=[
                            ("CRITICA", "Crítica"),
                            ("MAYOR", "Mayor"),
                            ("MENOR", "Menor"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("ABIERTA", "Abierta"),
                            ("EN_INVESTIGACION", "En Investigación"),
                            ("EN_CAPA", "En CAPA"),
                            ("CERRADA", "Cerrada"),
                        ],
                        default="ABIERTA",
                        max_length=20,
                    ),
                ),
                ("fecha_deteccion", models.DateTimeField()),
                ("area_responsable", models.CharField(blank=True, max_length=50)),
                ("impacto_calidad", models.TextField(blank=True)),
                ("impacto_seguridad", models.TextField(blank=True)),
                ("impacto_eficacia", models.TextField(blank=True)),
                ("investigacion_realizada", models.TextField(blank=True)),
                ("causa_raiz", models.TextField(blank=True)),
                ("accion_inmediata", models.TextField(blank=True)),
                ("requiere_capa", models.BooleanField(default=False)),
                ("fecha_cierre", models.DateTimeField(blank=True, null=True)),
                (
                    "cerrado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="desviaciones_cerradas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "detectado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="desviaciones_detectadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lote",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="desviaciones",
                        to="core.lote",
                    ),
                ),
                (
                    "lote_etapa",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="desviaciones",
                        to="core.loteetapa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Desviación",
                "verbose_name_plural": "Desviaciones",
                "ordering": ["-fecha_deteccion"],
            },
        ),
        migrations.CreateModel(
            name="ControlCalidad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_control",
                    models.CharField(
                        help_text="ej: Peso promedio, Dureza, Friabilidad",
                        max_length=100,
                    ),
                ),
                ("valor_medido", models.DecimalField(decimal_places=4, max_digits=10)),
                ("unidad", models.CharField(max_length=20)),
                ("valor_minimo", models.DecimalField(decimal_places=4, max_digits=10)),
                ("valor_maximo", models.DecimalField(decimal_places=4, max_digits=10)),
                ("conforme", models.BooleanField(editable=False)),
                ("fecha_control", models.DateTimeField(auto_now_add=True)),
                ("observaciones", models.TextField(blank=True)),
                (
                    "controlado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="controles_realizados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lote_etapa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="controles_calidad",
                        to="core.loteetapa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Control de Calidad",
                "verbose_name_plural": "Controles de Calidad",
                "ordering": ["-fecha_control"],
            },
        ),
        migrations.AddField(
            model_name="incidente",
            name="maquina",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="incidentes",
                to="core.maquina",
            ),
        ),
        migrations.CreateModel(
            name="Parada",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("PLANIFICADA", "Planificada"),
                            ("NO_PLANIFICADA", "No Planificada"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "categoria",
                    models.CharField(
                        choices=[
                            ("FALLA_EQUIPO", "Falla de Equipo"),
                            ("FALTA_INSUMO", "Falta de Insumo"),
                            ("CAMBIO_FORMATO", "Cambio de Formato"),
                            ("LIMPIEZA", "Limpieza"),
                            ("CALIDAD", "Problema de Calidad"),
                            ("OTROS", "Otros"),
                        ],
                        max_length=20,
                    ),
                ),
                ("fecha_inicio", models.DateTimeField()),
                ("fecha_fin", models.DateTimeField(blank=True, null=True)),
                (
                    "duracion_minutos",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("descripcion", models.TextField()),
                ("solucion", models.TextField(blank=True)),
                (
                    "lote_etapa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paradas",
                        to="core.loteetapa",
                    ),
                ),
                (
                    "registrado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="paradas_registradas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Parada",
                "verbose_name_plural": "Paradas",
                "ordering": ["-fecha_inicio"],
            },
        ),
        migrations.CreateModel(
            name="PlanMantenimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=30, unique=True, verbose_name="Código"),
                ),
                ("nombre", models.CharField(max_length=200)),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "frecuencia_dias",
                    models.IntegerField(
                        blank=True, help_text="Frecuencia en días", null=True
                    ),
                ),
                (
                    "frecuencia_horas_uso",
                    models.IntegerField(
                        blank=True, help_text="Frecuencia en horas de uso", null=True
                    ),
                ),
                (
                    "frecuencia_ciclos",
                    models.IntegerField(
                        blank=True,
                        help_text="Frecuencia en ciclos de operación",
                        null=True,
                    ),
                ),
                (
                    "tareas",
                    models.JSONField(
                        default=list,
                        help_text="Lista de tareas: [{nombre, descripcion, duracion_min}]",
                    ),
                ),
                (
                    "repuestos_necesarios",
                    models.JSONField(
                        default=list,
                        help_text="Lista de repuestos: [{repuesto_id, cantidad}]",
                    ),
                ),
                (
                    "duracion_estimada_horas",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("activo", models.BooleanField(default=True)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "creado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="planes_creados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "maquina",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="planes_mantenimiento",
                        to="core.maquina",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.tipomantenimiento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan de Mantenimiento",
                "verbose_name_plural": "Planes de Mantenimiento",
                "ordering": ["maquina", "codigo"],
            },
        ),
        migrations.CreateModel(
            name="LoteDocumento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=200)),
                ("archivo_url", models.CharField(max_length=500)),
                (
                    "hash_sha256",
                    models.CharField(blank=True, editable=False, max_length=64),
                ),
                ("tamaño_bytes", models.BigIntegerField(default=0, editable=False)),
                ("fecha_subida", models.DateTimeField(auto_now_add=True)),
                (
                    "lote",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documentos",
                        to="core.lote",
                    ),
                ),
                (
                    "subido_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="documentos_subidos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tipo_documento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.tipodocumento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Documento de Lote",
                "verbose_name_plural": "Documentos de Lotes",
                "ordering": ["-fecha_subida"],
            },
        ),
        migrations.AddField(
            model_name="incidente",
            name="tipo",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="core.tipoincidente"
            ),
        ),
        migrations.CreateModel(
            name="OrdenTrabajo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(max_length=30, unique=True, verbose_name="Código"),
                ),
                (
                    "prioridad",
                    models.CharField(
                        choices=[
                            ("BAJA", "Baja"),
                            ("NORMAL", "Normal"),
                            ("ALTA", "Alta"),
                            ("URGENTE", "Urgente"),
                        ],
                        default="NORMAL",
                        max_length=10,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("ABIERTA", "Abierta"),
                            ("ASIGNADA", "Asignada"),
                            ("EN_PROCESO", "En Proceso"),
                            ("PAUSADA", "Pausada"),
                            ("COMPLETADA", "Completada"),
                            ("CANCELADA", "Cancelada"),
                        ],
                        default="ABIERTA",
                        max_length=20,
                    ),
                ),
                ("titulo", models.CharField(max_length=200)),
                ("descripcion", models.TextField()),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_planificada", models.DateTimeField(blank=True, null=True)),
                ("fecha_inicio", models.DateTimeField(blank=True, null=True)),
                ("fecha_fin", models.DateTimeField(blank=True, null=True)),
                (
                    "duracion_real_horas",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        editable=False,
                        max_digits=6,
                        null=True,
                    ),
                ),
                ("trabajo_realizado", models.TextField(blank=True)),
                ("observaciones", models.TextField(blank=True)),
                ("requiere_parada_produccion", models.BooleanField(default=False)),
                (
                    "costo_estimado",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "costo_real",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "asignada_a",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ordenes_asignadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "completada_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ordenes_completadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "creada_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ordenes_creadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "maquina",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ordenes_trabajo",
                        to="core.maquina",
                    ),
                ),
                (
                    "plan_mantenimiento",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ordenes_generadas",
                        to="core.planmantenimiento",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.tipomantenimiento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Orden de Trabajo",
                "verbose_name_plural": "Órdenes de Trabajo",
                "ordering": ["-fecha_creacion"],
            },
        ),
        migrations.CreateModel(
            name="HistorialMantenimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateTimeField()),
                ("descripcion", models.TextField()),
                (
                    "tiempo_parada_horas",
                    models.DecimalField(decimal_places=2, max_digits=6),
                ),
                (
                    "costo",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "realizado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mantenimientos_realizados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "maquina",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historial_mantenimiento",
                        to="core.maquina",
                    ),
                ),
                (
                    "orden_trabajo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historial",
                        to="core.ordentrabajo",
                    ),
                ),
                (
                    "tipo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.tipomantenimiento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Historial de Mantenimiento",
                "verbose_name_plural": "Historiales de Mantenimiento",
                "ordering": ["-fecha"],
            },
        ),
        migrations.AddField(
            model_name="maquina",
            name="ubicacion",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="maquinas",
                to="core.ubicacion",
            ),
        ),
        migrations.AddField(
            model_name="incidente",
            name="ubicacion",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="incidentes",
                to="core.ubicacion",
            ),
        ),
        migrations.CreateModel(
            name="DocumentoVersionado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=50, verbose_name="Código")),
                ("titulo", models.CharField(max_length=200)),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("SOP", "Standard Operating Procedure"),
                            ("IT", "Instrucción de Trabajo"),
                            ("FT", "Ficha Técnica"),
                            ("PL", "Protocolo"),
                            ("REG", "Registro"),
                        ],
                        max_length=10,
                    ),
                ),
                ("version", models.CharField(max_length=20)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("BORRADOR", "Borrador"),
                            ("EN_REVISION", "En Revisión"),
                            ("APROBADO", "Aprobado"),
                            ("VIGENTE", "Vigente"),
                            ("OBSOLETO", "Obsoleto"),
                        ],
                        default="BORRADOR",
                        max_length=20,
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_revision", models.DateTimeField(blank=True, null=True)),
                ("fecha_aprobacion", models.DateTimeField(blank=True, null=True)),
                ("fecha_vigencia_inicio", models.DateField(blank=True, null=True)),
                ("fecha_vigencia_fin", models.DateField(blank=True, null=True)),
                (
                    "contenido",
                    models.TextField(
                        blank=True, help_text="Contenido del documento o referencia"
                    ),
                ),
                ("archivo_url", models.CharField(blank=True, max_length=500)),
                ("hash_sha256", models.CharField(blank=True, max_length=64)),
                (
                    "cambios_version",
                    models.TextField(
                        blank=True, help_text="Resumen de cambios en esta versión"
                    ),
                ),
                (
                    "aprobado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="documentos_aprobados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="documentos_creados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "documento_anterior",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="versiones_siguientes",
                        to="core.documentoversionado",
                    ),
                ),
                (
                    "revisado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="documentos_revisados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Documento Versionado",
                "verbose_name_plural": "Documentos Versionados",
                "ordering": ["-fecha_creacion"],
                "unique_together": {("codigo", "version")},
            },
        ),
        migrations.CreateModel(
            name="ElectronicSignature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("APPROVE", "Approve"),
                            ("REVIEW", "Review"),
                            ("RELEASE", "Release"),
                            ("REJECT", "Reject"),
                            ("AUTHORIZE", "Authorize"),
                            ("VERIFY", "Verify"),
                        ],
                        help_text="Action being signed",
                        max_length=20,
                    ),
                ),
                (
                    "meaning",
                    models.CharField(
                        choices=[
                            ("APPROVED_BY", "Approved by"),
                            ("REVIEWED_BY", "Reviewed by"),
                            ("RELEASED_BY", "Released by"),
                            ("REJECTED_BY", "Rejected by"),
                            ("AUTHORIZED_BY", "Authorized by"),
                            ("VERIFIED_BY", "Verified by"),
                        ],
                        help_text="Meaning of the signature",
                        max_length=20,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the signature was applied"
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        help_text="Type of object being signed (e.g., 'Lote', 'OrdenTrabajo')",
                        max_length=100,
                    ),
                ),
                (
                    "object_id",
                    models.IntegerField(help_text="ID of the object being signed"),
                ),
                (
                    "object_str",
                    models.CharField(
                        help_text="String representation of the object", max_length=200
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        help_text="Reason for signing (required by 21 CFR Part 11)"
                    ),
                ),
                (
                    "comments",
                    models.TextField(blank=True, help_text="Additional comments"),
                ),
                (
                    "password_hash",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Hash of password used to authenticate (for audit purposes)",
                        max_length=128,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address from which signature was applied",
                        null=True,
                    ),
                ),
                (
                    "user_agent",
                    models.CharField(
                        blank=True,
                        help_text="Browser/client user agent",
                        max_length=500,
                    ),
                ),
                (
                    "data_hash",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="SHA-256 hash of the signed data at the time of signing",
                        max_length=64,
                    ),
                ),
                (
                    "signature_hash",
                    models.CharField(
                        blank=True,
                        default="",
                        editable=False,
                        help_text="Hash of the signature itself (for integrity verification)",
                        max_length=64,
                    ),
                ),
                (
                    "is_valid",
                    models.BooleanField(
                        default=True, help_text="Whether this signature is still valid"
                    ),
                ),
                (
                    "invalidated_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this signature was invalidated",
                        null=True,
                    ),
                ),
                (
                    "invalidation_reason",
                    models.TextField(blank=True, help_text="Reason for invalidation"),
                ),
                (
                    "invalidated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who invalidated this signature",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="signatures_invalidated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who signed",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="electronic_signatures",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Electronic Signature",
                "verbose_name_plural": "Electronic Signatures",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="core_electr_content_cfcd25_idx",
                    ),
                    models.Index(
                        fields=["user", "-timestamp"],
                        name="core_electr_user_id_9bd307_idx",
                    ),
                    models.Index(
                        fields=["is_valid"], name="core_electr_is_vali_074163_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="LogAuditoria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "accion",
                    models.CharField(
                        choices=[
                            ("CREAR", "Crear"),
                            ("MODIFICAR", "Modificar"),
                            ("ELIMINAR", "Eliminar"),
                            ("CANCELAR", "Cancelar"),
                            ("VER", "Ver"),
                            ("EXPORTAR", "Exportar"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "modelo",
                    models.CharField(
                        help_text="Nombre del modelo afectado", max_length=100
                    ),
                ),
                ("objeto_id", models.IntegerField()),
                ("objeto_str", models.CharField(max_length=200)),
                (
                    "cambios",
                    models.JSONField(
                        default=dict,
                        help_text="Estructura: {campo: {antes: X, despues: Y}}",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acciones_auditoria",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Auditoría",
                "verbose_name_plural": "Logs de Auditoría",
                "ordering": ["-fecha"],
                "indexes": [
                    models.Index(
                        fields=["usuario", "-fecha"],
                        name="core_logaud_usuario_778fba_idx",
                    ),
                    models.Index(
                        fields=["modelo", "objeto_id"],
                        name="core_logaud_modelo_df8aac_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="IndicadorMantenimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "periodo",
                    models.CharField(
                        choices=[
                            ("SEMANAL", "Semanal"),
                            ("MENSUAL", "Mensual"),
                            ("ANUAL", "Anual"),
                        ],
                        max_length=10,
                    ),
                ),
                ("fecha_inicio", models.DateField()),
                ("fecha_fin", models.DateField()),
                (
                    "mtbf_horas",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Mean Time Between Failures",
                        max_digits=10,
                    ),
                ),
                (
                    "mttr_horas",
                    models.DecimalField(
                        decimal_places=2, help_text="Mean Time To Repair", max_digits=10
                    ),
                ),
                (
                    "disponibilidad_porcentaje",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("numero_fallas", models.IntegerField()),
                ("numero_mantenimientos_preventivos", models.IntegerField()),
                ("numero_mantenimientos_correctivos", models.IntegerField()),
                (
                    "costo_total_mantenimiento",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("fecha_calculo", models.DateTimeField(auto_now_add=True)),
                (
                    "maquina",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="indicadores_mantenimiento",
                        to="core.maquina",
                    ),
                ),
            ],
            options={
                "verbose_name": "Indicador de Mantenimiento",
                "verbose_name_plural": "Indicadores de Mantenimiento",
                "ordering": ["-fecha_inicio"],
                "unique_together": {("maquina", "periodo", "fecha_inicio")},
            },
        ),
        migrations.CreateModel(
            name="Notificacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("INFO", "Información"),
                            ("ADVERTENCIA", "Advertencia"),
                            ("ERROR", "Error"),
                            ("URGENTE", "Urgente"),
                        ],
                        max_length=15,
                    ),
                ),
                ("titulo", models.CharField(max_length=200)),
                ("mensaje", models.TextField()),
                (
                    "referencia_modelo",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("referencia_id", models.IntegerField(blank=True, null=True)),
                ("leida", models.BooleanField(default=False)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_lectura", models.DateTimeField(blank=True, null=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notificaciones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificación",
                "verbose_name_plural": "Notificaciones",
                "ordering": ["-fecha_creacion"],
                "indexes": [
                    models.Index(
                        fields=["usuario", "leida", "-fecha_creacion"],
                        name="core_notifi_usuario_a0fda1_idx",
                    )
                ],
            },
        ),
    ]
